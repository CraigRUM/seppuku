{"version":3,"sources":["components/Camera/Camera.tsx","model/Point.ts","model/CannyEdgeDetector.ts","model/HoughTransform.ts","model/Intersection.ts","model/Square.ts","model/GameBoard.ts","components/Decector/Decector.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/Camera/Camera.module.css","logo.svg","components/Camera/camera.svg","components/Camera/bin.svg"],"names":["Camera","_ref","ctxReady","_useState","useState","_useState2","Object","slicedToArray","imageSrc","setImageSrc","_useState3","_useState4","imageElement","setImageElement","_useState5","_useState6","imageRef","setImageRef","_useState7","_useState8","loadedImage","setLoadedImage","canvasRef","createRef","webcamRef","React","useRef","capture","useCallback","current","getScreenshot","webcam","react_default","a","createElement","react_webcam_default","ref","screenshotFormat","useEffect","onLoad","getImageHeight","onRefChange","src","alt","id","node","_ref2","img","target","getContext","drawImage","reset","callback","uiButton","className","styles","onClick","binIcon","cameraIcon","canvas","height","width","Fragment","CameraWrapper","Point","x","y","imageWidth","classCallCheck","this","rIndex","gIndex","bIndex","data","concat","hexVal","n","toString","hexString","_hexString$slice$matc","slice","match","map","s","Number","colour","arguments","length","undefined","rgb","rgbVal","console","log","defaultOptions","lowThreshold","highThreshold","gaussianBlur","Gx","Gy","convOptions","bitDepth","mode","HoughTransform","_this","THICKNESS","ctx","numAngleCells","rhoMax","accum","Array","drawingWidth","drawingHeight","cosTable","sinTable","distance","findMaxInHough","lines","i","j","max","b","bestRho","push","x1","y1","x2","y2","newLines","filter","l","mainX","mainY","_loop","line","pop","mainXMid","lXMid","mainYMid","lYMid","forEach","beginPath","strokeStyle","moveTo","lineTo","stroke","closePath","houghAcc","rho","thetaIndex","Math","sqrt","theta","PI","cos","sin","Intersection","Square","topLeft","bottomRight","intialised","numbers","provisonal","number","pos","sq","row","col","filteredPos","heightMod","percent","widthMod","listToFilter","inList","tryFilter","list","_this2","others","c","apply","toConsumableArray","includes","val","fillStyle","fill","draw","dataURL","_this3","isEmpty","blank","document","body","style","backgroundImage","Tesseract","recognize","progress","then","res","text","replace","substring","drawLetter","catch","offsetX","offsetY","buffer","b_ctx","toDataURL","font","fillText","r","g","imageData","getImageData","count","blackCount","GameBoard","cols","rows","squares","solvefailed","cells","colours","start","end","e","group","bSquare","populateCellData","floor","random","entered","updatePossible","filterPossible","options","failed","cell","fillCell","getRandomInt","remaining","getPos","filterPos","setTimeout","clearBoard","getRow","getCol","getSquare","Decector","threshholdDone","setThreshholdDone","edges","setEdges","origin","setOrigin","points","setPoints","orgImageRef","intersectionPoints","gameBoard","freshPoints","Image","load","grey","image","checkProcessable","channels","components","assign","brightness","maxValue","gfOptions","sigma","radius","gf","gaussianFilter","gradientX","convolution","gradientY","G","hypotenuse","constructor","nms","kind","finalImage","dir","round","atan2","getValueXY","setValueXY","currentNms","currentEdge","currentPixels","outer","k","newPixels","cannyEdgeDetector","copyToCanvas","boxImage","doHueTransform","houghTransform","pixelData","upContrast","threshold","point","inX","inY","getColourMagnitued","hlines","vlines","hl","vl","intersects","findSquares","waitForSquares","reverse","p","getLetter","putImageData","plot","contrast","intercept","solveGame","solved","populateBoard","solvecb","solve","hidden","App","setCanvas","cameraComponent","components_Camera_Camera","detectorComponent","components_Decector_Decector","logo","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a54e6751.chunk.js","sourcesContent":["import React, { createRef, FC, useCallback, useEffect, useState } from 'react';\nimport styles from './Camera.module.css';\nimport Webcam from \"react-webcam\";\nimport cameraIcon from'./camera.svg';\nimport binIcon from'./bin.svg';\n\ninterface CameraProps {ctxReady: Function}\n\nconst Camera: FC<CameraProps> = ({ctxReady}) => {\n\n  // States\n  const [imageSrc, setImageSrc] = useState<any>('');\n  const [imageElement, setImageElement] = useState<any>('');\n  const [imageRef, setImageRef] = useState<any>('');\n  const [loadedImage, setLoadedImage] = useState<any>('');\n  const canvasRef = createRef() as any;\n\n  // Web Cam setup\n  const webcamRef = React.useRef(null) as any;\n  const capture = useCallback(() => {\n    if(webcamRef.current){setImageSrc(webcamRef.current.getScreenshot()); }\n    },[webcamRef]\n  );\n  const webcam = <Webcam ref={webcamRef} screenshotFormat=\"image/jpeg\"/>;\n\n  useEffect(() => {\n    setImageElement(<img onLoad={getImageHeight} ref={onRefChange} src={imageSrc} alt=\"Captured Image\" id=\"image\" />);\n  }, [imageSrc]);\n\n  const onRefChange = useCallback(node => {\n    setImageRef(node);\n  }, [imageElement]);\n\n  const getImageHeight = function({target: img} :any){\n    setLoadedImage(img);\n  }\n\n  useEffect(() => {\n    if(canvasRef.current){\n      const ctx = canvasRef.current.getContext('2d');\n      ctx.drawImage(imageRef, 0, 0);\n      setImageElement('');\n      ctxReady(canvasRef.current);\n    }\n  }, [loadedImage]);\n\n  const reset = useCallback((callback) => {\n    setImageSrc(null);\n    setLoadedImage(null);\n    setImageElement('');\n    ctxReady(null);\n  },[]);\n\n  const uiButton = imageSrc ? \n    <button className={styles.uiButton} onClick={reset}><img src={binIcon} alt=\"reset\" /></button> : \n    <button className={styles.uiButton} onClick={capture}><img src={cameraIcon} alt=\"take a picture\" /></button>;\n\n  const canvas = <canvas ref={canvasRef} height=\"480\" width=\"640\"/>;\n  \n  return <>\n    <div className={styles.CameraWrapper}>\n      {imageSrc && imageElement}\n      {loadedImage && canvas}\n      {!imageSrc && webcam}\n    </div>\n    {uiButton}\n  </>;\n};\n\nexport default Camera;\n","class Point {\r\n    x : number;\r\n    y : number;\r\n\r\n    rIndex : number;\r\n    gIndex : number;\r\n    bIndex : number;\r\n\r\n    constructor(x:number, y:number, imageWidth:number) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.rIndex = (x + y * imageWidth) * 4;\r\n        this.gIndex = this.rIndex + 1;\r\n        this.bIndex = this.gIndex + 1;\r\n    }\r\n\r\n    getColourAsHex(data: Uint8ClampedArray){\r\n        return `#${this.hexVal(data[this.rIndex])}${this.hexVal(data[this.gIndex])}${this.hexVal(data[this.bIndex])}`;\r\n    }\r\n\r\n    getColourMagnitued(data: Uint8ClampedArray){\r\n        return data[this.rIndex]+data[this.gIndex]+data[this.bIndex];\r\n    }\r\n\r\n    hexVal(n: number){\r\n        return n.toString(16);\r\n    }\r\n\r\n    rgbVal(hexString: string){\r\n        return hexString.slice(1).match(/.{1,2}/g)?.map(s => Number(`0x${s}`));\r\n    }\r\n\r\n    plot(data: Uint8ClampedArray, colour: string = \"#4be11e\"){\r\n        const rgb = this.rgbVal(colour);\r\n        if (rgb) {\r\n            data[this.rIndex] = rgb[0];\r\n            data[this.gIndex] = rgb[1];\r\n            data[this.bIndex] = rgb[2];\r\n        }else{\r\n            console.log(`bad colour`);\r\n        }\r\n    }\r\n}\r\nexport default Point;","const defaultOptions = {\r\n    lowThreshold: 10,\r\n    highThreshold: 30,\r\n    gaussianBlur: 1.1\r\n};\r\n\r\nconst Gx = [\r\n    [-1, 0, +1],\r\n    [-2, 0, +2],\r\n    [-1, 0, +1]\r\n];\r\n\r\nconst Gy = [\r\n    [-1, -2, -1],\r\n    [0, 0, 0],\r\n    [+1, +2, +1]\r\n];\r\n\r\nconst convOptions = {\r\n    bitDepth: 32,\r\n    mode: 'periodic'\r\n};\r\n\r\nexport default function cannyEdgeDetector(image: any, options?: any) {\r\n    image.checkProcessable('Canny edge detector', {\r\n        bitDepth: 8,\r\n        channels: 1,\r\n        components: 1\r\n    });\r\n\r\n    options = Object.assign({}, defaultOptions, options);\r\n\r\n    const width = image.width;\r\n    const height = image.height;\r\n    const brightness = image.maxValue;\r\n\r\n    const gfOptions = {\r\n        sigma: options.gaussianBlur,\r\n        radius: 3\r\n    };\r\n\r\n    const gf = image.gaussianFilter(gfOptions);\r\n\r\n    const gradientX = gf.convolution(Gy, convOptions);\r\n    const gradientY = gf.convolution(Gx, convOptions);\r\n\r\n    const G = gradientY.hypotenuse(gradientX);\r\n\r\n    const Image = image.constructor;\r\n\r\n    const nms = new Image(width, height, {\r\n        kind: 'GREY',\r\n        bitDepth: 32\r\n    });\r\n\r\n    const edges = new Image(width, height, {\r\n        kind: 'GREY',\r\n        bitDepth: 32\r\n    });\r\n\r\n    const finalImage = new Image(width, height, {\r\n        kind: 'GREY'\r\n    });\r\n\r\n    // Non-Maximum supression\r\n    for (var i = 1; i < width - 1; i++) {\r\n        for (var j = 1; j < height - 1; j++) {\r\n\r\n            var dir = (Math.round(Math.atan2(gradientY.getValueXY(i, j, 0), gradientX.getValueXY(i, j, 0)) * (5.0 / Math.PI)) + 5) % 5;\r\n\r\n            if (\r\n                !((dir === 0 && (G.getValueXY(i, j, 0) <= G.getValueXY(i, j - 1, 0) || G.getValueXY(i, j, 0) <= G.getValueXY(i, j + 1, 0)))\r\n                    || (dir === 1 && (G.getValueXY(i, j, 0) <= G.getValueXY(i - 1, j + 1, 0) || G.getValueXY(i, j, 0) <= G.getValueXY(i + 1, j - 1, 0)))\r\n                    || (dir === 2 && (G.getValueXY(i, j, 0) <= G.getValueXY(i - 1, j, 0) || G.getValueXY(i, j, 0) <= G.getValueXY(i + 1, j, 0)))\r\n                    || (dir === 3 && (G.getValueXY(i, j, 0) <= G.getValueXY(i - 1, j - 1, 0) || G.getValueXY(i, j, 0) <= G.getValueXY(i + 1, j + 1, 0))))\r\n            ) {\r\n                nms.setValueXY(i, j, 0, G.getValueXY(i, j, 0));\r\n            }\r\n        }\r\n    }\r\n\r\n    for (i = 0; i < width * height; ++i) {\r\n        var currentNms = nms.data[i];\r\n        var currentEdge = 0;\r\n        if (currentNms > options.highThreshold) {\r\n            currentEdge++;\r\n            finalImage.data[i] = brightness;\r\n        }\r\n        if (currentNms > options.lowThreshold) {\r\n            currentEdge++;\r\n        }\r\n\r\n        edges.data[i] = currentEdge;\r\n    }\r\n\r\n    // Hysteresis: first pass\r\n    var currentPixels = [];\r\n    for (i = 1; i < width - 1; ++i) {\r\n        for (j = 1; j < height - 1; ++j) {\r\n            if (edges.getValueXY(i, j, 0) !== 1) {\r\n                continue;\r\n            }\r\n\r\n            outer: for (var k = i - 1; k < i + 2; ++k) {\r\n                for (var l = j - 1; l < j + 2; ++l) {\r\n                    if (edges.getValueXY(k, l, 0) === 2) {\r\n                        currentPixels.push([i, j]);\r\n                        finalImage.setValueXY(i, j, 0, brightness);\r\n                        break outer;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Hysteresis: second pass\r\n    while (currentPixels.length > 0) {\r\n        var newPixels = [];\r\n        for (i = 0; i < currentPixels.length; ++i) {\r\n            for (j = -1; j < 2; ++j) {\r\n                for (k = -1; k < 2; ++k) {\r\n                    if (j === 0 && k === 0) {\r\n                        continue;\r\n                    }\r\n                    var row: any = currentPixels[i][0] + j;\r\n                    var col: any = currentPixels[i][1] + k;\r\n                    if (edges.getValueXY(row, col, 0) === 1 && finalImage.getValueXY(row, col, 0) === 0) {\r\n                        newPixels.push([row, col]);\r\n                        finalImage.setValueXY(row, col, 0, brightness);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        currentPixels = newPixels;\r\n    }\r\n\r\n    return finalImage;\r\n}","import Line from \"./Line\";\r\n\r\n//HSctx.fillStyle = 'rgba(0,0,0,.01)';\r\nclass HoughTransform{\r\n    THICKNESS = 2;\r\n    ctx: any;\r\n    numAngleCells = 360;\r\n    rhoMax: number;\r\n    accum = new Array(this.numAngleCells);\r\n    drawingWidth: number;\r\n    drawingHeight: number;\r\n    cosTable = new Array(this.numAngleCells);\r\n    sinTable = new Array(this.numAngleCells);\r\n    distance = 10;\r\n\r\n\r\n\r\n    constructor(canvas: HTMLCanvasElement){\r\n        this.drawingWidth = canvas.width;\r\n        this.drawingHeight = canvas.height;\r\n        this.rhoMax = Math.sqrt(this.drawingWidth * this.drawingWidth + this.drawingHeight * this.drawingHeight);\r\n        this.ctx = canvas.getContext('2d');\r\n        for (var theta = 0, thetaIndex = 0; thetaIndex < this.numAngleCells; theta += Math.PI / this.numAngleCells, thetaIndex++) {\r\n            this.cosTable[thetaIndex] = Math.cos(theta);\r\n            this.sinTable[thetaIndex] = Math.sin(theta);\r\n        }\r\n    }\r\n\r\n    findMaxInHough = () => {\r\n        let lines = [] as Array<Line>;\r\n        for (var i=0;i<360;i++) {\r\n            for (var j=0;j<this.accum[i].length;j++) {\r\n                if (this.accum[i][j]>max) {}\r\n                    var max = this.accum[i][j];\r\n                    if (max>160) {\r\n                        var a=this.cosTable[i];\r\n                        var b=this.sinTable[i];\r\n                        var bestRho = j;\r\n                        bestRho<<=1; // accumulator is bitshifted\r\n                        bestRho-=this.rhoMax; /// accumulator has rhoMax added\r\n                        lines.push({   \r\n                            x1: a*bestRho+1000*(-b),\r\n                            y1: (b*bestRho+1000*(a)),\r\n                            x2: a*bestRho-1000*(-b),\r\n                            y2: (b*bestRho-1000*(a))   \r\n                        } as Line);\r\n                    }\r\n            }\r\n        }\r\n        const newLines = [] as Array<Line>;\r\n        lines = lines.filter(l => {\r\n            const mainX = (l.x1 - l.x2) < -5 || (l.x2 - l.x1) < -5;\r\n            const mainY = (l.y1 - l.y2) < -5 || (l.y2 - l.y1) < -5;\r\n            return !(mainX && mainY)\r\n        });\r\n        while(lines.length > 0){\r\n            const line: Line = lines.pop() as Line;\r\n            newLines.push(line);\r\n            lines = lines.filter(l => {\r\n                const mainXMid = (line.x1 + line.x2) / 2;\r\n                const lXMid = (l.x1 + l.x2) / 2;\r\n                const mainYMid = (line.y1 + line.y2) / 2;\r\n                const lYMid = (l.y1 + l.y2) / 2;\r\n                return !((mainXMid + this.distance) > lXMid && (mainXMid - this.distance) < lXMid) \r\n                || !((mainYMid + this.distance) > lYMid && (mainYMid - this.distance) < lYMid) ;\r\n            });\r\n        }\r\n        console.log(newLines);\r\n        newLines.forEach((line: Line) => {\r\n            console.log(line);\r\n            // now to backproject into drawing space\r\n            //console.log(bestTheta,bestRho);\r\n            //console.log(x1,y1,x2,y2);\r\n            this.ctx.beginPath();\r\n            this.ctx.strokeStyle='rgba(255,0,0,1)';\r\n            this.ctx.moveTo(line.x1+this.drawingWidth/2,line.y1+this.drawingHeight/2);\r\n            this.ctx.lineTo(line.x2+this.drawingWidth/2,line.y2+this.drawingHeight/2);\r\n            this.ctx.stroke();\r\n            this.ctx.strokeStyle='rgba(0,0,0,1)';\r\n            this.ctx.closePath();\r\n        });\r\n        return newLines;\r\n    }\r\n\r\n    houghAcc = (x: number, y: number) => {\r\n        console.log(\"running\");\r\n        var rho;\r\n        var thetaIndex = 0;\r\n        x -= this.drawingWidth / 2;\r\n        y -= this.drawingHeight / 2;\r\n        for (; thetaIndex < this.numAngleCells; thetaIndex++) {\r\n            rho = this.rhoMax + x * this.cosTable[thetaIndex] + y * this.sinTable[thetaIndex];\r\n            rho >>= 1;\r\n            if (this.accum[thetaIndex] == undefined) this.accum[thetaIndex] = [];\r\n            if (this.accum[thetaIndex][rho] == undefined) {\r\n                this.accum[thetaIndex][rho] = 1;\r\n            } else {\r\n                this.accum[thetaIndex][rho]++;\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default HoughTransform;","class Intersection{\r\n    x: number;\r\n    y: number;\r\n\r\n    constructor(x: number, y: number){\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\r\nexport default Intersection;","import Intersection from \"./Intersection\";\r\nimport {Tesseract} from \"tesseract.ts\";\r\n\r\nclass Square{\r\n\r\n    id: any; \r\n    ctx: any; \r\n    canvas: any; \r\n    topLeft: any; \r\n    bottomRight: any;\r\n    intialised: any;\r\n    width: any;\r\n    height: any;\r\n    numbers: any;\r\n    provisonal: boolean;\r\n    number: string = '';\r\n    pos: any;\r\n    sq: any;\r\n    row: any;\r\n    col: any;\r\n    filteredPos: any;\r\n\r\n    constructor(id :any, ctx:any, canvas:any, topLeft:any, bottomRight:any){\r\n        this.id = id;\r\n        this.ctx = ctx\r\n        this.topLeft = new Intersection(topLeft.x, topLeft.y);\r\n        this.bottomRight = new Intersection(bottomRight.x, bottomRight.y);\r\n        this.canvas = canvas;\r\n        this.intialised = false;\r\n        this.width = this.bottomRight.x - this.topLeft.x;\r\n        this.height = this.bottomRight.y - this.topLeft.y;\r\n        this.numbers = ['1','2','3','4','5','6','7','8','9'];\r\n\r\n        const heightMod = this.percent(this.height, 15);\r\n        const widthMod = this.percent(this.width, 15);\r\n        this.bottomRight.y = this.bottomRight.y - heightMod;\r\n        this.bottomRight.x = this.bottomRight.x - widthMod;\r\n        this.topLeft.y = this.topLeft.y + heightMod;\r\n        this.topLeft.x = this.topLeft.x + widthMod;\r\n        this.width = this.bottomRight.x - this.topLeft.x;\r\n        this.height = this.bottomRight.y - this.topLeft.y;\r\n        this.provisonal = false;\r\n    }\r\n\r\n    getPos(){\r\n        const listToFilter = this.pos && this.pos.length > 0 ? this.pos : this.numbers;\r\n        this.pos = listToFilter.filter( (n: any) => !(this.inList(this.row, n) || this.inList(this.col, n) || this.inList(this.sq, n)));\r\n    }\r\n\r\n    filterPos(){\r\n        this.tryFilter(this.sq);\r\n        this.tryFilter(this.row);\r\n        this.tryFilter(this.col);\r\n    }\r\n\r\n    tryFilter(list:any){\r\n        const others:any = [];\r\n        this.row.filter((c:Square) => !c.number && c.id != this.id).forEach((c:Square) => others.push(...c.pos));\r\n        this.col.filter((c:Square) => !c.number && c.id != this.id).forEach((c:Square) => others.push(...c.pos));\r\n        list.filter((c:Square) => !c.number && c.id != this.id).forEach((c:Square) => others.push(...c.pos));\r\n        this.filteredPos = this.pos.filter((n:any) => !others.includes(n));\r\n        if(this.filteredPos.length > 0 && this.filteredPos.length < this.pos.length){\r\n            this.pos = this.filteredPos;\r\n            console.log(others);\r\n            console.log(this.pos);\r\n            console.log(this.filteredPos);\r\n        }\r\n    }\r\n\r\n    inList(list:any, number:string){\r\n        return list.filter((c:Square) => c.number === number).length != 0\r\n    }\r\n\r\n    percent(val: any, percent: any){\r\n        return (val / 100) * percent;\r\n    }\r\n\r\n    draw(colour='yellow'){\r\n        this.ctx.fillStyle = colour;\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(this.topLeft.x, this.topLeft.y);\r\n        this.ctx.lineTo(this.bottomRight.x, this.topLeft.y);\r\n        this.ctx.lineTo(this.bottomRight.x, this.bottomRight.y);\r\n        this.ctx.lineTo(this.topLeft.x, this.bottomRight.y);\r\n        this.ctx.lineTo(this.topLeft.x, this.topLeft.y);\r\n        this.ctx.closePath();\r\n        this.ctx.fill();\r\n    }\r\n\r\n    blank(){\r\n        this.draw('white');\r\n        this.number = '';\r\n        this.pos = [];\r\n        this.intialised = true;\r\n        this.provisonal = true;\r\n    }\r\n\r\n    callback(dataURL: string) {\r\n        if(this.isEmpty()){\r\n            this.blank();\r\n            return;\r\n        }\r\n        document.body.style.backgroundImage = 'url(' + dataURL + ')';\r\n        Tesseract.recognize(\r\n            dataURL,'eng'\r\n        ).progress(console.log).then((res: any) => {\r\n            console.log(res.text);\r\n            const number = res.text ? res.text.replace(/[^0-9]/g,\"\").substring(0, 1) : \"\";\r\n            if(number){\r\n                //this.draw('orange');\r\n                this.number = number;\r\n                this.drawLetter();\r\n                this.intialised = true;\r\n                this.provisonal = false;\r\n                console.log(`The number you are looking at is a ${res.text} in square ${this.toString()}`);\r\n            }else{\r\n                console.log(`Nothing found in square ${this.toString()}`);\r\n                this.blank();\r\n            }\r\n        }).catch(() => {\r\n            this.callback(dataURL)\r\n        })\r\n    }\r\n\r\n    getLetter() {\r\n        // create an in-memory canvas\r\n        const offsetX = this.topLeft.x\r\n        const offsetY = this.topLeft.y\r\n        const width = this.bottomRight.x - this.topLeft.x\r\n        const height = this.bottomRight.y - this.topLeft.y\r\n        var buffer = document.createElement('canvas') as HTMLCanvasElement;\r\n        var b_ctx = buffer.getContext('2d');\r\n        // set its width/height to the required ones\r\n        buffer.width = width;\r\n        buffer.height = height;\r\n        // draw the main canvas on our buffer one\r\n        // drawImage(source, source_X, source_Y, source_Width, source_Height, \r\n        //  dest_X, dest_Y, dest_Width, dest_Height)\r\n        if(b_ctx){\r\n            b_ctx.drawImage(this.canvas, offsetX, offsetY, width, height,\r\n                0, 0, buffer.width, buffer.height);\r\n        }\r\n        // now call the callback with the dataURL of our buffer canvas\r\n        this.callback(buffer.toDataURL());\r\n    }\r\n\r\n    drawLetter() {\r\n        this.ctx.fillStyle = \"black\";\r\n        this.ctx.font = '25px Courier New';\r\n        this.ctx.fillText(this.number, this.topLeft.x, this.bottomRight.y);\r\n    }\r\n\r\n    toString(){\r\n        return `|${this.number}|`\r\n    }\r\n\r\n    isEmpty(){\r\n        const imageData = this.ctx.getImageData(this.topLeft.x, this.topLeft.y, this.width, this.height); //take away the .data\r\n\r\n        var r, g, b;\r\n        var count = 0;\r\n        var blackCount = 0; \r\n        for(var i = 0; i+3 < imageData.data.length; i+=4) {\r\n            r = imageData.data[i];\r\n            g = imageData.data[i+1];\r\n            b = imageData.data[i+2];\r\n\r\n            if(r + b + g < 255) { // if pixel is not black, and not transparent          \r\n                blackCount++;\r\n            }\r\n            count++;\r\n        }\r\n        const percent = (blackCount / (count / 100));\r\n        return !(percent > 15);\r\n    }\r\n}\r\nexport default Square;","import Square from \"./Square\";\r\n\r\nclass GameBoard {\r\n    cols :any;\r\n    rows :any;\r\n    squares :any;\r\n    solvefailed :boolean;\r\n    cells: any;\r\n    colours: string[] = [\"teal\", \"cyan\", \"pink\", \"magenta\", \"lightgrey\", \"yellow\", \"red\", \"lime\", \"orange\"];\r\n    constructor() {\r\n        this.cols = [[], [], [], [], [], [], [], [], []];\r\n        this.rows = [];\r\n        this.squares = [];\r\n        this.solvefailed = false;\r\n    }\r\n\r\n    populateBoard(cells: any) {\r\n        this.cells = cells;\r\n        for (var i = 0; i < 9; i++) {\r\n            const start = i * 9;\r\n            const end = start + 9;\r\n            this.rows.push(this.cells.slice(start, end));\r\n        }\r\n\r\n        this.rows.forEach((c:any, i:number) => {\r\n            c.forEach((e:any, j:number) => {\r\n                this.cols[j][i] = this.rows[i][j];\r\n            });\r\n        });\r\n\r\n        for (var i = 0; i < 3; i++) {\r\n            const group = this.rows.slice(i * 3, (i * 3) + 3);\r\n            for (var j = 0; j < 3; j++) {\r\n                const start = j * 3;\r\n                const end = start + 3;\r\n                const bSquare = [];\r\n                bSquare.push(...group[0].slice(start, end));\r\n                bSquare.push(...group[1].slice(start, end));\r\n                bSquare.push(...group[2].slice(start, end));\r\n                this.squares.push(bSquare);\r\n            }\r\n        }\r\n\r\n        this.cells.forEach((c: any) => this.populateCellData(c));\r\n        console.log(this.cols);\r\n        console.log(this.rows);\r\n        console.log(this.squares);\r\n    }\r\n\r\n    getRandomInt(max: number) {\r\n        return Math.floor(Math.random() * max);\r\n    }\r\n\r\n    solve(){\r\n        var entered = false;\r\n        this.updatePossible();\r\n        this.filterPossible();\r\n        const options = this.cells.filter((c: Square) => !c.number);\r\n\r\n        if(options.filter((c: Square) => c.pos.length == 0).length > 0){\r\n            this.failed();\r\n            return;\r\n        }\r\n        options.filter((c: Square) => c.pos.length == 1).forEach((cell: Square) => {\r\n            if(!entered){\r\n                this.fillCell(cell, cell.pos[this.getRandomInt(cell.pos.length)]);\r\n                entered = true;\r\n                this.solvefailed = !entered;\r\n            }\r\n        });\r\n        if(this.solvefailed){\r\n            const remaining = options.filter((c: Square) => c.pos.length > 1 && c.pos.length < 4);\r\n            const cell = options.filter((c: Square) => c.pos.length > 1 && c.pos.length < 4)[this.getRandomInt(remaining.length)];\r\n            this.fillCell(cell, cell.pos[this.getRandomInt(cell.pos.length)]);\r\n            entered = true;\r\n            this.solvefailed = !entered;\r\n            return;\r\n        }\r\n        this.solvefailed = !entered;\r\n    }\r\n\r\n    updatePossible(){\r\n        this.cells.filter((c: Square) => !c.number).forEach( (cell: Square) => {\r\n            cell.getPos();\r\n        });\r\n    }\r\n\r\n    filterPossible(){\r\n        this.cells.filter((c: Square) => !c.number).forEach( (cell: Square) => {\r\n            cell.filterPos();\r\n        });\r\n    }\r\n\r\n    fillCell(cell: Square, number: string){\r\n        cell.number = number;\r\n        cell.draw(this.colours[(+number)-1]);\r\n        cell.drawLetter();\r\n        this.solvefailed = false;\r\n    }\r\n\r\n    failed(){\r\n        this.cells.filter((c: Square) => c.provisonal).forEach((c: Square) => c.draw('pink'));\r\n        setTimeout(() => {this.clearBoard()}, 250);\r\n    }\r\n\r\n    clearBoard(){\r\n        this.cells.filter((c: Square) => c.provisonal).forEach((c: Square) => c.blank());\r\n    }\r\n\r\n    solved(){\r\n        return this.cells.filter((c: Square) => !c.number).length === 0\r\n    }\r\n\r\n    populateCellData(cell: Square){\r\n        cell.row = this.getRow(cell);\r\n        cell.col = this.getCol(cell);\r\n        cell.sq = this.getSquare(cell);\r\n    }\r\n\r\n    getRow(cell: Square){\r\n        return this.rows.filter((i:any) => i.filter((c: Square) => c.id === cell.id).length == 1)[0];\r\n    }\r\n\r\n    getCol(cell: Square){\r\n        return this.cols.filter((i:any) => i.filter((c: Square) => c.id === cell.id).length == 1)[0];\r\n    }\r\n\r\n    getSquare(cell: Square){\r\n        return this.squares.filter((i:any) => i.filter((c: Square) => c.id === cell.id).length == 1)[0];\r\n    }\r\n}\r\nexport default GameBoard;","import React, { createRef, FC, useEffect, useState } from 'react';\nimport styles from './Decector.module.css';\nimport Point from '../../model/Point';\nimport cannyEdgeDetector from '../../model/CannyEdgeDetector';\nimport HoughTransform from '../../model/HoughTransform';\nimport Image from 'image-js';\nimport Intersection from '../../model/Intersection';\nimport Square from '../../model/Square';\nimport GameBoard from '../../model/GameBoard';\n\ninterface DecectorProps {canvas: any}\n\nconst Decector: FC<DecectorProps> = ({canvas}) => {\n  const ctx = canvas.getContext('2d');\n  const [threshholdDone, setThreshholdDone] = useState<any>(false);\n  const [edges, setEdges] = useState<any>(null);\n  const [origin, setOrigin] = useState<any>(null);\n  const [points, setPoints] = useState<any>(null);\n\n  const maxGap = 20;\n  const lineThreshold = 20;\n  const globalThreshold = 100;\n  const xColour = \"red\";\n  const yColour = \"green\";\n  const imageWidth = 640;\n  const imageHeight = 480;\n  const imageRef = createRef() as any;\n  const orgImageRef = createRef() as any;\n  const intersectionPoints: Intersection[] = [];\n  const squares: Square[] = [];\n  const gameBoard = new GameBoard();\n\n  const minLineLength = 120;\n\n  useEffect(() => {\n    setTimeout(()=>{\n      if(!points){\n        const freshPoints = new Array<Point>();\n        for (let y = 0; y < imageHeight; y++) {\n          for (let x = 0; x < imageWidth; x++) {\n            freshPoints.push(new Point(x, y, 640));\n          }\n        }\n        setPoints(freshPoints);\n      }\n    }, 1);\n  }, [threshholdDone]);\n\n  useEffect(() => {\n    setTimeout(()=>{\n      //threshold();\n      Image.load(canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\")).then((img: Image) => {\n        setOrigin(img.toDataURL());\n        const grey = img.grey();\n        setEdges(cannyEdgeDetector(grey));\n      });\n      // getYLines(pixelData);\n      //getXLines();\n    }, 1);\n  }, [points]);\n  \n  const makeImage = () => {\n    const img = <img onLoad={copyToCanvas} ref={imageRef} src={edges.toDataURL()} alt=\"Captured Image\" id=\"image\" />;\n    return ;\n  }\n\n  const copyToCanvas = () =>{\n    ctx.drawImage(imageRef.current, 0, 0);\n    boxImage();\n    setTimeout(() =>{\n      doHueTransform();\n    }, 1000);\n  }\n\n  const doHueTransform = () => {\n    const houghTransform = new HoughTransform(canvas);\n    const pixelData:ImageData = ctx.getImageData(0, 0, imageWidth, imageHeight);\n    ctx.drawImage(orgImageRef.current, 0, 0);\n    upContrast(95);\n    threshold();\n    points.forEach((point: Point) => {\n      const inX = point.x > 170 && point.x < (170+300);\n      const inY = point.y > 90 && point.y < (90+300);\n      if(inX && inY && point.getColourMagnitued(pixelData.data) > 10){\n        houghTransform.houghAcc(point.x,point.y);\n      }\n    });\n    const lines = houghTransform.findMaxInHough();\n    const hlines = lines.filter(l =>  l.y1 + 5 > l.y2 && l.y1 - 5 < l.y2);\n    const vlines = lines.filter(l =>  l.x1 + 5 > l.x2 && l.x1 - 5 < l.x2);\n    hlines.forEach((hl) => {\n      vlines.forEach((vl) => {\n          intersects(vl.x1 + 320, hl.y1 + 240);\n      });\n    });\n    console.log(intersectionPoints);\n    findSquares();\n    waitForSquares();\n  }\n\n  const findSquares = () => {\n    intersectionPoints.reverse().forEach(\n        (p, i) => {\n            if (i + 11 < intersectionPoints.length && (i - 9) % 10 != 0) {\n                const sq = new Square(i, ctx, canvas, p, intersectionPoints[i + 11]);\n                squares.push(sq);\n            }\n        });\n    squares.forEach((s, i) => {\n        setTimeout(function () {\n            s.getLetter();\n        }, i * 10);\n    });\n}\n\n  const intersects = (x:number, y:number) => {\n    intersectionPoints.push(new Intersection(x, y));\n  }\n\n  const putImageData = (imageData: ImageData) => {\n    ctx.putImageData(imageData, 0, 0);\n  };\n\n  const threshold = () => {\n      const pixelData: ImageData = ctx.getImageData(0, 0, imageWidth, imageHeight);\n      points.forEach( (point: Point) => {\n        if(point.getColourMagnitued(pixelData.data) / 3 < globalThreshold) {\n          point.plot(pixelData.data, \"#000000\");\n        }else{\n          point.plot(pixelData.data, \"#FFFFFF\");\n        }\n      });\n      putImageData(pixelData);\n  }\n\n  const boxImage = () => {\n    const pixelData: ImageData = ctx.getImageData(0, 0, imageWidth, imageHeight);\n    points.forEach( (point: Point) => {\n      const inX = point.x > 170 && point.x < (170+300);\n      const inY = point.y > 90 && point.y < (90+300);\n      if(!(inX && inY)){\n        point.plot(pixelData.data, \"#000000\");\n      }\n    });\n    putImageData(pixelData);\n  }\n\n  const upContrast = (contrast: any) => {\n    const pixelData: ImageData = ctx.getImageData(0, 0, imageWidth, imageHeight);\n    contrast = (contrast/100) + 1;  //convert to decimal & shift range: [0..2]\n    var intercept = 128 * (1 - contrast);\n    for(var i=0;i<pixelData.data.length;i+=4){   //r,g,b,a\n      pixelData.data[i] = pixelData.data[i]*contrast + intercept;\n      pixelData.data[i+1] = pixelData.data[i+1]*contrast + intercept;\n      pixelData.data[i+2] = pixelData.data[i+2]*contrast + intercept;\n    }\n    putImageData(pixelData);\n  }\n\n  const squaresInitilized = () => {\n    return squares.filter(s => !s.intialised).length == 0;\n  }\n\nconst waitForSquares = function(){\n    console.log(`Waiting for sqaures to be done!`);\n    setTimeout(squaresInitilized() ? solveGame : waitForSquares, 1000);\n}\n\nconst solvecb = function(){\n    gameBoard.solve();\n    console.log(`HMMMMMM`);\n    setTimeout(gameBoard.solved() ? () => {solved()} : solvecb, 10);\n}\n\nconst solved = function(){\n    console.log('we did it')\n    gameBoard.cells.forEach((c: Square) => {\n        gameBoard.fillCell(c, c.number);\n    });\n}\n\nconst solveGame = function(){\n    gameBoard.populateBoard(squares)\n    solvecb();\n}\n\n  if(!threshholdDone){\n    setThreshholdDone(true);\n  }\n  return <> \n  {edges && <img onLoad={copyToCanvas} ref={imageRef} src={edges.toDataURL()} alt=\"Captured Image\" id=\"image\" hidden />}\n  {origin && <img ref={orgImageRef} src={origin} alt=\"Captured Image\" id=\"image\" hidden />}\n  </>;\n};\n\nexport default Decector;\n","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Camera from './components/Camera/Camera';\nimport Decector from './components/Decector/Decector';\n\nfunction App() {\n  const [canvas, setCanvas] = useState<any>('');\n\n  const cameraComponent = <Camera ctxReady={setCanvas}></Camera>;\n  const detectorComponent = <Decector canvas={canvas} />;\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {cameraComponent}\n        {canvas && detectorComponent}\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"uiButton\":\"Camera_uiButton__1P_j6\",\"CameraWrapper\":\"Camera_CameraWrapper__24Xq_\"};","module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","module.exports = __webpack_public_path__ + \"static/media/camera.c4363820.svg\";","module.exports = __webpack_public_path__ + \"static/media/bin.3fd11e65.svg\";"],"sourceRoot":""}