{"version":3,"sources":["components/Camera/Camera.tsx","model/Point.ts","model/CannyEdgeDetector.ts","model/Line.ts","model/HoughTransform.ts","model/Intersection.ts","model/Square.ts","model/GameBoard.ts","components/Decector/Decector.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/Camera/Camera.module.css","logo.svg","components/Camera/camera.svg","components/Camera/bin.svg"],"names":["Camera","_ref","ctxReady","videoConstraints","width","max","imageWidth","height","imageHeight","facingMode","_useState","useState","_useState2","Object","slicedToArray","imageSrc","setImageSrc","_useState3","_useState4","imageElement","setImageElement","_useState5","_useState6","imageRef","setImageRef","_useState7","_useState8","loadedImage","setLoadedImage","_useState9","_useState10","dimentions","setDimensions","canvasRef","createRef","webcamRef","React","useRef","capture","useCallback","current","getScreenshot","getDimentions","console","log","video","videoWidth","setTimeout","videoHeight","webcam","react_default","a","createElement","react_webcam_default","onUserMedia","className","styles","camera","ref","screenshotFormat","useEffect","onLoad","handleImageLoad","onRefChange","src","alt","id","node","_ref2","img","target","getContext","drawImage","boxSize","xMod","yMod","ctx","clearRect","y","x","fillStyle","concat","fillRect","reset","callback","uiButton","onClick","style","margin-top","binIcon","cameraIcon","canvas","Fragment","CameraWrapper","InnerWrapper","Point","classCallCheck","this","rIndex","gIndex","bIndex","data","hexVal","n","toString","hexString","_hexString$slice$matc","slice","match","map","s","Number","colour","arguments","length","undefined","rgb","rgbVal","defaultOptions","lowThreshold","highThreshold","gaussianBlur","Gx","Gy","convOptions","bitDepth","mode","Line","b","line","xdiff","ydiff","det","div","d","HoughTransform","distance","minLength","maxTilt","_this","THICKNESS","HOZIZONTAL","VERTICAL","numAngleCells","rhoMax","accum","Array","drawingWidth","drawingHeight","cosTable","sinTable","findMaxInHough","lines","i","j","bestRho","push","newLines","filter","l","mainX","mainY","_loop","pop","mainLineOrientation","checkOrientation","main","getMidPoint","secondary","getLineDistance","forEach","drawLine","beginPath","strokeStyle","moveTo","lineTo","stroke","closePath","houghAcc","rho","thetaIndex","Math","sqrt","theta","PI","cos","sin","getDif","start","end","min","Intersection","Square","topLeft","bottomRight","intialised","numbers","provisonal","number","pos","sq","row","col","filteredPos","heightMod","percent","widthMod","listToFilter","inList","tryFilter","list","_this2","others","c","apply","toConsumableArray","includes","val","fill","draw","dataURL","_this3","isEmpty","blank","document","body","backgroundImage","Tesseract","recognize","progress","then","res","text","replace","substring","drawLetter","catch","offsetX","offsetY","buffer","b_ctx","toDataURL","font","fillText","r","g","imageData","getImageData","count","blackCount","GameBoard","cols","rows","squares","solvefailed","cells","colours","e","group","bSquare","populateCellData","floor","random","updatePossible","filterPossible","failed","cell","getNextBest","guessCell","fillCell","getRandomInt","options","refinedOptions","v","_ret","getPos","filterPos","clearBoard","getRow","getCol","getSquare","Decector","threshholdDone","setThreshholdDone","edges","setEdges","origin","setOrigin","points","setPoints","orgImageRef","intersectionPoints","gameBoard","freshPoints","Image","load","grey","image","checkProcessable","channels","components","assign","brightness","maxValue","gfOptions","sigma","radius","gf","gaussianFilter","gradientX","convolution","gradientY","G","hypotenuse","constructor","nms","kind","finalImage","dir","round","atan2","getValueXY","setValueXY","currentNms","currentEdge","currentPixels","outer","k","newPixels","cannyEdgeDetector","copyToCanvas","boxImage","doHueTransform","houghTransform","pixelData","upContrast","point","inBox","getColourMagnitued","hlines","vlines","hl","vl","intersection","intersects","findSquares","waitForSquares","reverse","p","getLetter","putImageData","plot","contrast","intercept","solveGame","solved","populateBoard","solvecb","solve","hidden","getWindowDimensions","_window","window","innerWidth","innerHeight","App","_useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","setCanvas","cameraComponent","components_Camera_Camera","detectorComponent","components_Decector_Decector","scrollWidth","scrollHeight","logo","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ca0028b1.chunk.js","sourcesContent":["import React, { createRef, FC, useCallback, useEffect, useState } from 'react';\nimport styles from './Camera.module.css';\nimport Webcam from \"react-webcam\";\nimport cameraIcon from'./camera.svg';\nimport binIcon from'./bin.svg';\n\ninterface CameraProps {ctxReady: Function, imageWidth: number, imageHeight: number}\n\nconst Camera: FC<CameraProps> = ({ctxReady, imageWidth, imageHeight}) => {\n  const videoConstraints = {\n    width: { max: imageWidth },\n    height: { max: imageHeight },\n    facingMode: \"environment\"\n  };\n\n  // States\n  const [imageSrc, setImageSrc] = useState<any>('');\n  const [imageElement, setImageElement] = useState<any>('');\n  const [imageRef, setImageRef] = useState<any>('');\n  const [loadedImage, setLoadedImage] = useState<any>('');\n  const [dimentions, setDimensions] = useState<any>(null);\n  const canvasRef = createRef() as any;\n\n  // Web Cam setup\n  const webcamRef = React.useRef(null) as any;\n  const capture = useCallback(() => {\n    if(webcamRef.current){\n      setImageSrc(webcamRef.current.getScreenshot());\n    }\n    },[webcamRef]\n  );\n\n  const getDimentions = useCallback(() => {\n    console.log(\"we did it \");\n    const video: HTMLVideoElement = webcamRef.current.video;\n    console.log(video.videoWidth);\n    setTimeout(() => { \n      setDimensions({width: video.videoWidth, height: video.videoHeight});\n      console.log(video.videoWidth); \n    }, 1000);\n  }, []);\n  const webcam = <Webcam  onUserMedia={getDimentions} className={styles.camera} ref={webcamRef} screenshotFormat=\"image/jpeg\" videoConstraints={videoConstraints}/>;\n\n  useEffect(() => {\n    setImageElement(<img onLoad={handleImageLoad} ref={onRefChange} src={imageSrc} alt=\"Captured Image\" id=\"image\" />);\n  }, [imageSrc]);\n\n  const onRefChange = useCallback(node => {\n    setImageRef(node);\n  }, [imageElement]);\n\n  const handleImageLoad = function({target: img} :any){\n    setLoadedImage(img);\n  }\n\n  useEffect(() => {\n    if(canvasRef.current && imageRef){\n      const ctx = canvasRef.current.getContext('2d');\n      ctx.drawImage(imageRef, 0, 0);\n      setImageElement('');\n      ctxReady(canvasRef.current);\n    }\n  }, [loadedImage]);\n\n  useEffect(() => {\n    if(canvasRef.current){\n\n      const boxSize = dimentions.height * 0.5;\n      const xMod = (dimentions.width - boxSize) / 2;\n      const yMod = (dimentions.height - boxSize) / 2;\n      const ctx = canvasRef.current.getContext('2d');\n      ctx.clearRect(0, 0, dimentions.width , dimentions.height);\n      for (let y = 0; y < dimentions.height; y++) {\n        for (let x = 0; x < dimentions.width; x++) {\n          if(!(x > xMod && x < (dimentions.width - xMod) && y > yMod && y < (dimentions.height - yMod))){\n            ctx.fillStyle = `rgba(${x},${y},0, 0.7)`;\n            ctx.fillRect(x, y, 1, 1);\n          }\n        }\n      }\n    }\n  }, [dimentions]);\n\n  const reset = useCallback((callback) => {\n    setImageSrc(null);\n    setLoadedImage(null);\n    setImageElement('');\n    ctxReady(null);\n  },[]);\n\n  const uiButton = imageSrc ? \n    <button className={styles.uiButton} onClick={reset} style={dimentions && {\"margin-top\":`${dimentions.height*0.75}px`}}><img src={binIcon} alt=\"reset\" /></button> : \n    <button className={styles.uiButton} onClick={capture} style={dimentions && {\"margin-top\":`${dimentions.height*0.75}px`}}><img src={cameraIcon} alt=\"take a picture\" /></button>;\n\n    \n  const canvas = dimentions ? <canvas className={styles.canvas} ref={canvasRef} height={dimentions.height} width={dimentions.width}/> : '';\n  \n  return <>\n    <div className={styles.CameraWrapper}  style={dimentions && {\"height\":dimentions.height, \"width\":dimentions.width}}>\n      <div className={styles.InnerWrapper}>\n        {imageSrc && imageElement}\n        {canvas}\n        {!imageSrc && webcam}\n        {uiButton}\n      </div>\n    </div>\n\n  </>;\n};\n\nexport default Camera;","class Point {\r\n    x : number;\r\n    y : number;\r\n\r\n    rIndex : number;\r\n    gIndex : number;\r\n    bIndex : number;\r\n\r\n    constructor(x:number, y:number, imageWidth:number) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.rIndex = (x + y * imageWidth) * 4;\r\n        this.gIndex = this.rIndex + 1;\r\n        this.bIndex = this.gIndex + 1;\r\n    }\r\n\r\n    getColourAsHex(data: Uint8ClampedArray){\r\n        return `#${this.hexVal(data[this.rIndex])}${this.hexVal(data[this.gIndex])}${this.hexVal(data[this.bIndex])}`;\r\n    }\r\n\r\n    getColourMagnitued(data: Uint8ClampedArray){\r\n        return data[this.rIndex]+data[this.gIndex]+data[this.bIndex];\r\n    }\r\n\r\n    hexVal(n: number){\r\n        return n.toString(16);\r\n    }\r\n\r\n    rgbVal(hexString: string){\r\n        return hexString.slice(1).match(/.{1,2}/g)?.map(s => Number(`0x${s}`));\r\n    }\r\n\r\n    plot(data: Uint8ClampedArray, colour: string = \"#4be11e\"){\r\n        const rgb = this.rgbVal(colour);\r\n        if (rgb) {\r\n            data[this.rIndex] = rgb[0];\r\n            data[this.gIndex] = rgb[1];\r\n            data[this.bIndex] = rgb[2];\r\n        }else{\r\n            console.log(`bad colour`);\r\n        }\r\n    }\r\n\r\n    inBox(width: number, height: number, xMod: number, yMod: number){\r\n        return this.x > xMod && this.x < (width - xMod) && this.y > yMod && this.y < (height - yMod);\r\n    }\r\n}\r\nexport default Point;","const defaultOptions = {\r\n    lowThreshold: 10,\r\n    highThreshold: 30,\r\n    gaussianBlur: 1.1\r\n};\r\n\r\nconst Gx = [\r\n    [-1, 0, +1],\r\n    [-2, 0, +2],\r\n    [-1, 0, +1]\r\n];\r\n\r\nconst Gy = [\r\n    [-1, -2, -1],\r\n    [0, 0, 0],\r\n    [+1, +2, +1]\r\n];\r\n\r\nconst convOptions = {\r\n    bitDepth: 32,\r\n    mode: 'periodic'\r\n};\r\n\r\nexport default function cannyEdgeDetector(image: any, options?: any) {\r\n    image.checkProcessable('Canny edge detector', {\r\n        bitDepth: 8,\r\n        channels: 1,\r\n        components: 1\r\n    });\r\n\r\n    options = Object.assign({}, defaultOptions, options);\r\n\r\n    const width = image.width;\r\n    const height = image.height;\r\n    const brightness = image.maxValue;\r\n\r\n    const gfOptions = {\r\n        sigma: options.gaussianBlur,\r\n        radius: 3\r\n    };\r\n\r\n    const gf = image.gaussianFilter(gfOptions);\r\n\r\n    const gradientX = gf.convolution(Gy, convOptions);\r\n    const gradientY = gf.convolution(Gx, convOptions);\r\n\r\n    const G = gradientY.hypotenuse(gradientX);\r\n\r\n    const Image = image.constructor;\r\n\r\n    const nms = new Image(width, height, {\r\n        kind: 'GREY',\r\n        bitDepth: 32\r\n    });\r\n\r\n    const edges = new Image(width, height, {\r\n        kind: 'GREY',\r\n        bitDepth: 32\r\n    });\r\n\r\n    const finalImage = new Image(width, height, {\r\n        kind: 'GREY'\r\n    });\r\n\r\n    // Non-Maximum supression\r\n    for (var i = 1; i < width - 1; i++) {\r\n        for (var j = 1; j < height - 1; j++) {\r\n\r\n            var dir = (Math.round(Math.atan2(gradientY.getValueXY(i, j, 0), gradientX.getValueXY(i, j, 0)) * (5.0 / Math.PI)) + 5) % 5;\r\n\r\n            if (\r\n                !((dir === 0 && (G.getValueXY(i, j, 0) <= G.getValueXY(i, j - 1, 0) || G.getValueXY(i, j, 0) <= G.getValueXY(i, j + 1, 0)))\r\n                    || (dir === 1 && (G.getValueXY(i, j, 0) <= G.getValueXY(i - 1, j + 1, 0) || G.getValueXY(i, j, 0) <= G.getValueXY(i + 1, j - 1, 0)))\r\n                    || (dir === 2 && (G.getValueXY(i, j, 0) <= G.getValueXY(i - 1, j, 0) || G.getValueXY(i, j, 0) <= G.getValueXY(i + 1, j, 0)))\r\n                    || (dir === 3 && (G.getValueXY(i, j, 0) <= G.getValueXY(i - 1, j - 1, 0) || G.getValueXY(i, j, 0) <= G.getValueXY(i + 1, j + 1, 0))))\r\n            ) {\r\n                nms.setValueXY(i, j, 0, G.getValueXY(i, j, 0));\r\n            }\r\n        }\r\n    }\r\n\r\n    for (i = 0; i < width * height; ++i) {\r\n        var currentNms = nms.data[i];\r\n        var currentEdge = 0;\r\n        if (currentNms > options.highThreshold) {\r\n            currentEdge++;\r\n            finalImage.data[i] = brightness;\r\n        }\r\n        if (currentNms > options.lowThreshold) {\r\n            currentEdge++;\r\n        }\r\n\r\n        edges.data[i] = currentEdge;\r\n    }\r\n\r\n    // Hysteresis: first pass\r\n    var currentPixels = [];\r\n    for (i = 1; i < width - 1; ++i) {\r\n        for (j = 1; j < height - 1; ++j) {\r\n            if (edges.getValueXY(i, j, 0) !== 1) {\r\n                continue;\r\n            }\r\n\r\n            outer: for (var k = i - 1; k < i + 2; ++k) {\r\n                for (var l = j - 1; l < j + 2; ++l) {\r\n                    if (edges.getValueXY(k, l, 0) === 2) {\r\n                        currentPixels.push([i, j]);\r\n                        finalImage.setValueXY(i, j, 0, brightness);\r\n                        break outer;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Hysteresis: second pass\r\n    while (currentPixels.length > 0) {\r\n        var newPixels = [];\r\n        for (i = 0; i < currentPixels.length; ++i) {\r\n            for (j = -1; j < 2; ++j) {\r\n                for (k = -1; k < 2; ++k) {\r\n                    if (j === 0 && k === 0) {\r\n                        continue;\r\n                    }\r\n                    var row: any = currentPixels[i][0] + j;\r\n                    var col: any = currentPixels[i][1] + k;\r\n                    if (edges.getValueXY(row, col, 0) === 1 && finalImage.getValueXY(row, col, 0) === 0) {\r\n                        newPixels.push([row, col]);\r\n                        finalImage.setValueXY(row, col, 0, brightness);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        currentPixels = newPixels;\r\n    }\r\n\r\n    return finalImage;\r\n}","import Point from \"./Point\";\r\n\r\nclass Line {\r\n    a : Point;\r\n    b : Point;\r\n\r\n    constructor(a: Point, b: Point) {\r\n        this.a = a;\r\n        this.b = b;\r\n    }\r\n\r\n    intersects(line: Line){\r\n        const xdiff: Point = new Point(this.a.x - this.b.x, line.a.x - line.b.x, 0);\r\n        const ydiff: Point = new Point(this.a.y - this.b.y, line.a.y - line.b.y, 0);\r\n        const det = (a: Point, b: Point) => {\r\n            return a.x * b.y - a.y * b.x;\r\n        }\r\n            \r\n        const div : number = det(xdiff, ydiff)\r\n        if (div == 0){ return null }\r\n        const d: Point = new Point(det(this.a, this.b), det(line.a, line.b), 0)\r\n        const x: number = det(d, xdiff) / div;\r\n        const y: number = det(d, ydiff) / div;\r\n        return {x: x, y: y} as any;\r\n    }\r\n}\r\nexport default Line;","import Line from \"./Line\";\r\nimport Point from \"./Point\";\r\n\r\n//HSctx.fillStyle = 'rgba(0,0,0,.01)';\r\nclass HoughTransform{\r\n    THICKNESS = 2;\r\n    HOZIZONTAL = \"h\";\r\n    VERTICAL = \"v\";\r\n    ctx: any;\r\n    numAngleCells = 360;\r\n    rhoMax: number;\r\n    accum = new Array(this.numAngleCells);\r\n    drawingWidth: number;\r\n    drawingHeight: number;\r\n    cosTable = new Array(this.numAngleCells);\r\n    sinTable = new Array(this.numAngleCells);\r\n    minLength: number;\r\n    distance: number;\r\n    maxTilt: number;\r\n\r\n    constructor(canvas: HTMLCanvasElement, distance: number, minLength: number, maxTilt: number){\r\n        this.maxTilt = maxTilt;\r\n        this.minLength = minLength;\r\n        this.distance = distance;\r\n        this.drawingWidth = canvas.width;\r\n        this.drawingHeight = canvas.height;\r\n        this.rhoMax = Math.sqrt(this.drawingWidth * this.drawingWidth + this.drawingHeight * this.drawingHeight);\r\n        this.ctx = canvas.getContext('2d');\r\n        for (var theta = 0, thetaIndex = 0; thetaIndex < this.numAngleCells; theta += Math.PI / this.numAngleCells, thetaIndex++) {\r\n            this.cosTable[thetaIndex] = Math.cos(theta);\r\n            this.sinTable[thetaIndex] = Math.sin(theta);\r\n        }\r\n    }\r\n\r\n    findMaxInHough = () => {\r\n        let lines = [] as Array<Line>;\r\n        for (var i=0;i<360;i++) {\r\n            for (var j=0;j<this.accum[i].length;j++) {\r\n                if (this.accum[i][j]>max) {}\r\n                    var max = this.accum[i][j];\r\n                    if (max>this.minLength) {\r\n                        var a=this.cosTable[i];\r\n                        var b=this.sinTable[i];\r\n                        var bestRho = j;\r\n                        bestRho<<=1; // accumulator is bitshifted\r\n                        bestRho-=this.rhoMax; /// accumulator has rhoMax added\r\n                        lines.push(new Line(   \r\n                            {\r\n                                x: a*bestRho+1000*(-b),\r\n                                y: (b*bestRho+1000*(a))\r\n                            } as Point,\r\n                            {\r\n                                x: a*bestRho-1000*(-b),\r\n                                y: (b*bestRho-1000*(a))\r\n                            } as Point\r\n                        ) as Line);\r\n                    }\r\n            }\r\n        }\r\n        const newLines = [] as Array<Line>;\r\n        lines = lines.filter(l => {\r\n            const mainX = (l.a.x - l.b.x) < -this.maxTilt || (l.b.x - l.a.x) < -this.maxTilt;\r\n            const mainY = (l.a.y - l.b.y) < -this.maxTilt || (l.b.y - l.a.y) < -this.maxTilt;\r\n            return !(mainX && mainY)\r\n        });\r\n        if(false){\r\n            lines.forEach((line: Line, i: number) => {\r\n                this.drawLine(line, `rgba(0,${(255 / lines.length) * (lines.length - i)},${(255 / lines.length) * i},1)`);\r\n            });\r\n        }\r\n        while(lines.length > 0){\r\n            const line: Line = lines.pop() as Line;\r\n            newLines.push(line);\r\n            lines = lines.filter(l => {\r\n                const mainLineOrientation = this.checkOrientation(line)\r\n                const secondaryLineOrientation = this.checkOrientation(l);\r\n                if(mainLineOrientation != secondaryLineOrientation) return true;\r\n\r\n                const main = mainLineOrientation == this.VERTICAL ? \r\n                    this.getMidPoint(line.a.x, line.b.x):\r\n                    this.getMidPoint(line.a.y,  line.b.y);\r\n                const secondary = mainLineOrientation == this.VERTICAL ? \r\n                    this.getMidPoint(l.a.x, l.b.x):\r\n                    this.getMidPoint(l.a.y,  l.b.y);\r\n                return !this.getLineDistance(main, secondary);\r\n            });\r\n        }\r\n        console.log(newLines);\r\n        newLines.forEach((line: Line, i: number) => {\r\n            this.drawLine(line, `rgba(0,150,150,1)`);\r\n        });\r\n        return newLines;\r\n    }\r\n\r\n    checkOrientation(line: Line){\r\n        return this.getDif(line.a.x, line.b.x) > this.getDif(line.a.y, line.b.y) ? this.HOZIZONTAL : this.VERTICAL;\r\n    }\r\n\r\n    getDif(start: number, end: number){\r\n        const max = start > end ? start : end;\r\n        const min = start > end ? end : start;\r\n        return (max - min);\r\n    }\r\n\r\n    getMidPoint(start: number, end: number){\r\n        const max = start > end ? start : end;\r\n        const min = start > end ? end : start;\r\n        return min + ((max - min) / 2);\r\n    }\r\n\r\n    getLineDistance(start: number, end: number){\r\n        const max = start > end ? start : end;\r\n        const min = start > end ? end : start;\r\n        return (min + this.distance) > max;\r\n    }\r\n\r\n    drawLine = (line: Line, colour: string) => {\r\n        console.log(line);\r\n        // now to backproject into drawing space\r\n        //console.log(bestTheta,bestRho);\r\n        //console.log(x1,y1,x2,y2);\r\n        this.ctx.beginPath();\r\n        this.ctx.strokeStyle=colour;\r\n        this.ctx.moveTo(line.a.x+this.drawingWidth/2,line.a.y+this.drawingHeight/2);\r\n        this.ctx.lineTo(line.b.x+this.drawingWidth/2,line.b.y+this.drawingHeight/2);\r\n        this.ctx.stroke();\r\n        this.ctx.strokeStyle='rgba(0,0,0,1)';\r\n        this.ctx.closePath();\r\n    }\r\n\r\n    houghAcc = (x: number, y: number) => {\r\n        console.log(\"running\");\r\n        var rho;\r\n        var thetaIndex = 0;\r\n        x -= this.drawingWidth / 2;\r\n        y -= this.drawingHeight / 2;\r\n        for (; thetaIndex < this.numAngleCells; thetaIndex++) {\r\n            rho = this.rhoMax + x * this.cosTable[thetaIndex] + y * this.sinTable[thetaIndex];\r\n            rho >>= 1;\r\n            if (this.accum[thetaIndex] == undefined) this.accum[thetaIndex] = [];\r\n            if (this.accum[thetaIndex][rho] == undefined) {\r\n                this.accum[thetaIndex][rho] = 1;\r\n            } else {\r\n                this.accum[thetaIndex][rho]++;\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default HoughTransform;","class Intersection{\r\n    x: number;\r\n    y: number;\r\n\r\n    constructor(x: number, y: number){\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\r\nexport default Intersection;","import Intersection from \"./Intersection\";\r\nimport {Tesseract} from \"tesseract.ts\";\r\n\r\nclass Square{\r\n\r\n    id: any; \r\n    ctx: any; \r\n    canvas: any; \r\n    topLeft: any; \r\n    bottomRight: any;\r\n    intialised: any;\r\n    width: any;\r\n    height: any;\r\n    numbers: any;\r\n    provisonal: boolean;\r\n    number: string = '';\r\n    pos: any;\r\n    sq: any;\r\n    row: any;\r\n    col: any;\r\n    filteredPos: any;\r\n\r\n    constructor(id :any, ctx:any, canvas:any, topLeft:any, bottomRight:any){\r\n        this.id = id;\r\n        this.ctx = ctx\r\n        this.topLeft = new Intersection(topLeft.x, topLeft.y);\r\n        this.bottomRight = new Intersection(bottomRight.x, bottomRight.y);\r\n        this.canvas = canvas;\r\n        this.intialised = false;\r\n        this.width = this.bottomRight.x - this.topLeft.x;\r\n        this.height = this.bottomRight.y - this.topLeft.y;\r\n        this.numbers = ['1','2','3','4','5','6','7','8','9'];\r\n\r\n        const heightMod = this.percent(this.height, 15);\r\n        const widthMod = this.percent(this.width, 15);\r\n        this.bottomRight.y = this.bottomRight.y - heightMod;\r\n        this.bottomRight.x = this.bottomRight.x - widthMod;\r\n        this.topLeft.y = this.topLeft.y + heightMod;\r\n        this.topLeft.x = this.topLeft.x + widthMod;\r\n        this.width = this.bottomRight.x - this.topLeft.x;\r\n        this.height = this.bottomRight.y - this.topLeft.y;\r\n        this.provisonal = false;\r\n    }\r\n\r\n    getPos(){\r\n        const listToFilter = this.pos && this.pos.length > 0 ? this.pos : this.numbers;\r\n        this.pos = listToFilter.filter( (n: any) => !(this.inList(this.row, n) || this.inList(this.col, n) || this.inList(this.sq, n)));\r\n    }\r\n\r\n    filterPos(){\r\n        this.tryFilter(this.sq);\r\n        this.tryFilter(this.row);\r\n        this.tryFilter(this.col);\r\n    }\r\n\r\n    tryFilter(list:any){\r\n        const others:any = [];\r\n        this.row.filter((c:Square) => !c.number && c.id != this.id).forEach((c:Square) => others.push(...c.pos));\r\n        this.col.filter((c:Square) => !c.number && c.id != this.id).forEach((c:Square) => others.push(...c.pos));\r\n        list.filter((c:Square) => !c.number && c.id != this.id).forEach((c:Square) => others.push(...c.pos));\r\n        this.filteredPos = this.pos.filter((n:any) => !others.includes(n));\r\n        if(this.filteredPos.length > 0 && this.filteredPos.length < this.pos.length){\r\n            this.pos = this.filteredPos;\r\n        }\r\n    }\r\n\r\n    inList(list:any, number:string){\r\n        return list.filter((c:Square) => c.number === number).length != 0\r\n    }\r\n\r\n    percent(val: any, percent: any){\r\n        return (val / 100) * percent;\r\n    }\r\n\r\n    draw(colour='yellow'){\r\n        this.ctx.fillStyle = colour;\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(this.topLeft.x, this.topLeft.y);\r\n        this.ctx.lineTo(this.bottomRight.x, this.topLeft.y);\r\n        this.ctx.lineTo(this.bottomRight.x, this.bottomRight.y);\r\n        this.ctx.lineTo(this.topLeft.x, this.bottomRight.y);\r\n        this.ctx.lineTo(this.topLeft.x, this.topLeft.y);\r\n        this.ctx.closePath();\r\n        this.ctx.fill();\r\n    }\r\n\r\n    blank(){\r\n        this.draw('white');\r\n        this.number = '';\r\n        this.pos = [];\r\n        this.intialised = true;\r\n        this.provisonal = true;\r\n    }\r\n\r\n    callback(dataURL: string) {\r\n        if(this.isEmpty()){\r\n            this.blank();\r\n            return;\r\n        }\r\n        document.body.style.backgroundImage = 'url(' + dataURL + ')';\r\n        Tesseract.recognize(\r\n            dataURL,'eng'\r\n        ).progress(console.log).then((res: any) => {\r\n            console.log(res.text);\r\n            const number = res.text ? res.text.replace(/[^0-9]/g,\"\").substring(0, 1) : \"\";\r\n            if(number){\r\n                //this.draw('orange');\r\n                this.number = number;\r\n                this.drawLetter();\r\n                this.intialised = true;\r\n                this.provisonal = false;\r\n                console.log(`The number you are looking at is a ${res.text} in square ${this.toString()}`);\r\n            }else{\r\n                console.log(`Nothing found in square ${this.toString()}`);\r\n                this.blank();\r\n            }\r\n        }).catch(() => {\r\n            this.callback(dataURL)\r\n        })\r\n    }\r\n\r\n    getLetter() {\r\n        // create an in-memory canvas\r\n        const offsetX = this.topLeft.x\r\n        const offsetY = this.topLeft.y\r\n        const width = this.bottomRight.x - this.topLeft.x\r\n        const height = this.bottomRight.y - this.topLeft.y\r\n        var buffer = document.createElement('canvas') as HTMLCanvasElement;\r\n        var b_ctx = buffer.getContext('2d');\r\n        // set its width/height to the required ones\r\n        buffer.width = width;\r\n        buffer.height = height;\r\n        // draw the main canvas on our buffer one\r\n        // drawImage(source, source_X, source_Y, source_Width, source_Height, \r\n        //  dest_X, dest_Y, dest_Width, dest_Height)\r\n        if(b_ctx){\r\n            b_ctx.drawImage(this.canvas, offsetX, offsetY, width, height,\r\n                0, 0, buffer.width, buffer.height);\r\n        }\r\n        // now call the callback with the dataURL of our buffer canvas\r\n        this.callback(buffer.toDataURL());\r\n    }\r\n\r\n    drawLetter() {\r\n        this.ctx.fillStyle = \"black\";\r\n        this.ctx.font = `${this.height * 1.2}px Courier New`;\r\n        this.ctx.fillText(this.number, this.topLeft.x, this.bottomRight.y);\r\n    }\r\n\r\n    toString(){\r\n        return `|${this.number}|`\r\n    }\r\n\r\n    isEmpty(){\r\n        const imageData = this.ctx.getImageData(this.topLeft.x, this.topLeft.y, this.width, this.height); //take away the .data\r\n\r\n        var r, g, b;\r\n        var count = 0;\r\n        var blackCount = 0; \r\n        for(var i = 0; i+3 < imageData.data.length; i+=4) {\r\n            r = imageData.data[i];\r\n            g = imageData.data[i+1];\r\n            b = imageData.data[i+2];\r\n\r\n            if(r + b + g < 255) { // if pixel is not black, and not transparent          \r\n                blackCount++;\r\n            }\r\n            count++;\r\n        }\r\n        const percent = (blackCount / (count / 100));\r\n        return !(percent > 15);\r\n    }\r\n}\r\nexport default Square;","import Square from \"./Square\";\r\n\r\nclass GameBoard {\r\n    cols :any;\r\n    rows :any;\r\n    squares :any;\r\n    solvefailed :boolean;\r\n    cells: any;\r\n    colours: string[] = [\"teal\", \"cyan\", \"pink\", \"magenta\", \"lightgrey\", \"yellow\", \"red\", \"lime\", \"orange\"];\r\n    constructor() {\r\n        this.cols = [[], [], [], [], [], [], [], [], []];\r\n        this.rows = [];\r\n        this.squares = [];\r\n        this.solvefailed = false;\r\n    }\r\n\r\n    populateBoard(cells: any) {\r\n        this.cells = cells;\r\n        for (var i = 0; i < 9; i++) {\r\n            const start = i * 9;\r\n            const end = start + 9;\r\n            this.rows.push(this.cells.slice(start, end));\r\n        }\r\n\r\n        this.rows.forEach((c:any, i:number) => {\r\n            c.forEach((e:any, j:number) => {\r\n                this.cols[j][i] = this.rows[i][j];\r\n            });\r\n        });\r\n\r\n        for (var i = 0; i < 3; i++) {\r\n            const group = this.rows.slice(i * 3, (i * 3) + 3);\r\n            for (var j = 0; j < 3; j++) {\r\n                const start = j * 3;\r\n                const end = start + 3;\r\n                const bSquare = [];\r\n                bSquare.push(...group[0].slice(start, end));\r\n                bSquare.push(...group[1].slice(start, end));\r\n                bSquare.push(...group[2].slice(start, end));\r\n                this.squares.push(bSquare);\r\n            }\r\n        }\r\n\r\n        this.cells.forEach((c: any) => this.populateCellData(c));\r\n        console.log(this.cols);\r\n        console.log(this.rows);\r\n        console.log(this.squares);\r\n    }\r\n\r\n    getRandomInt(max: number) {\r\n        return Math.floor(Math.random() * max);\r\n    }\r\n\r\n    solve(){\r\n        this.updatePossible();\r\n        this.filterPossible();\r\n        const options = this.cells.filter((c: Square) => !c.number);\r\n        if(options.filter((c: Square) => c.pos.length == 0).length > 0){\r\n            this.failed();\r\n            return;\r\n        }\r\n        const cell = this.getNextBest();\r\n        this.guessCell(cell);\r\n    }\r\n\r\n    guessCell(cell: Square){\r\n        if(cell && cell.pos && cell.pos.length){\r\n            this.fillCell(cell, cell.pos[this.getRandomInt(cell.pos.length)]);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getNextBest(){\r\n        const options = this.cells.filter((c: Square) => !c.number);\r\n        for(let i = 1; i <= 8; i++){\r\n            const refinedOptions = options.filter((c: Square) => c.pos.length == i);\r\n            if(refinedOptions.length){\r\n                return refinedOptions[this.getRandomInt(refinedOptions.length)];\r\n            }\r\n        }\r\n    }\r\n\r\n    updatePossible(){\r\n        this.cells.filter((c: Square) => !c.number).forEach( (cell: Square) => {\r\n            cell.getPos();\r\n        });\r\n    }\r\n\r\n    filterPossible(){\r\n        this.cells.filter((c: Square) => !c.number).forEach( (cell: Square) => {\r\n            cell.filterPos();\r\n        });\r\n    }\r\n\r\n    fillCell(cell: Square, number: string){\r\n        cell.number = number;\r\n        cell.draw(this.colours[(+number)-1]);\r\n        cell.drawLetter();\r\n        this.solvefailed = false;\r\n    }\r\n\r\n    failed(){\r\n        this.cells.filter((c: Square) => c.provisonal).forEach((c: Square) => c.draw('pink'));\r\n        setTimeout(() => {this.clearBoard()}, 250);\r\n    }\r\n\r\n    clearBoard(){\r\n        this.cells.filter((c: Square) => c.provisonal).forEach((c: Square) => c.blank());\r\n    }\r\n\r\n    solved(){\r\n        return this.cells.filter((c: Square) => !c.number).length === 0\r\n    }\r\n\r\n    populateCellData(cell: Square){\r\n        cell.row = this.getRow(cell);\r\n        cell.col = this.getCol(cell);\r\n        cell.sq = this.getSquare(cell);\r\n    }\r\n\r\n    getRow(cell: Square){\r\n        return this.rows.filter((i:any) => i.filter((c: Square) => c.id === cell.id).length == 1)[0];\r\n    }\r\n\r\n    getCol(cell: Square){\r\n        return this.cols.filter((i:any) => i.filter((c: Square) => c.id === cell.id).length == 1)[0];\r\n    }\r\n\r\n    getSquare(cell: Square){\r\n        return this.squares.filter((i:any) => i.filter((c: Square) => c.id === cell.id).length == 1)[0];\r\n    }\r\n}\r\nexport default GameBoard;","import React, { createRef, FC, useEffect, useState } from 'react';\nimport styles from './Decector.module.css';\nimport Point from '../../model/Point';\nimport cannyEdgeDetector from '../../model/CannyEdgeDetector';\nimport HoughTransform from '../../model/HoughTransform';\nimport Image from 'image-js';\nimport Intersection from '../../model/Intersection';\nimport Square from '../../model/Square';\nimport GameBoard from '../../model/GameBoard';\n\ninterface DecectorProps {\n  canvas: any,\n  imageWidth: number,\n  imageHeight: number,\n  reset: Function\n}\n\nconst Decector: FC<DecectorProps> = ({canvas, imageWidth, imageHeight, reset}) => {\n  const ctx = canvas.getContext('2d');\n  const [threshholdDone, setThreshholdDone] = useState<any>(false);\n  const [edges, setEdges] = useState<any>(null);\n  const [origin, setOrigin] = useState<any>(null);\n  const [points, setPoints] = useState<any>(null);\n\n  const maxGap = 20;\n  const lineThreshold = 20;\n  const globalThreshold = 100;\n  const xColour = \"red\";\n  const yColour = \"green\";\n  const imageRef = createRef() as any;\n  const orgImageRef = createRef() as any;\n  const intersectionPoints: Intersection[] = [];\n  const squares: Square[] = [];\n  const gameBoard = new GameBoard();\n  const boxSize = imageHeight * 0.5;\n  const xMod = (imageWidth - boxSize) / 2;\n  const yMod = (imageHeight - boxSize) / 2;\n\n  const minLineLength = 120;\n\n  useEffect(() => {\n    setTimeout(()=>{\n      if(!points){\n        const freshPoints = new Array<Point>();\n        for (let y = 0; y < imageHeight; y++) {\n          for (let x = 0; x < imageWidth; x++) {\n            freshPoints.push(new Point(x, y, imageWidth));\n          }\n        }\n        setPoints(freshPoints);\n      }\n    }, 1);\n  }, [threshholdDone]);\n\n  useEffect(() => {\n    setTimeout(()=>{\n      Image.load(canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\")).then((img: Image) => {\n        setOrigin(img.toDataURL());\n        const grey = img.grey();\n        setEdges(cannyEdgeDetector(grey));\n      });\n    }, 1);\n  }, [points]);\n  \n  const makeImage = () => {\n    const img = <img onLoad={copyToCanvas} ref={imageRef} src={edges.toDataURL()} alt=\"Captured Image\" id=\"image\" />;\n    return ;\n  }\n\n  const copyToCanvas = () =>{\n    ctx.drawImage(imageRef.current, 0, 0);\n    boxImage();\n    setTimeout(() =>{\n      doHueTransform();\n    }, 2000);\n  }\n\n  const doHueTransform = () => {\n    const maxTilt = (boxSize*0.05);\n    const houghTransform = new HoughTransform(canvas, (boxSize*0.08), (boxSize*0.7), maxTilt);\n    const pixelData:ImageData = ctx.getImageData(0, 0, imageWidth, imageHeight);\n    ctx.drawImage(orgImageRef.current, 0, 0);\n    upContrast(50);\n    //threshold();\n    points.forEach( (point: Point) => {\n      if(point.inBox(imageWidth, imageHeight, xMod, yMod) && point.getColourMagnitued(pixelData.data) > 10){\n        houghTransform.houghAcc(point.x,point.y);\n      }\n    });\n\n    const lines = houghTransform.findMaxInHough();\n    const hlines = lines.filter(l =>  l.a.y + maxTilt > l.b.y && l.a.y - maxTilt < l.b.y);\n    const vlines = lines.filter(l =>  l.a.x + maxTilt > l.b.x && l.a.x - maxTilt < l.b.x);\n    if(vlines.length != 10 || hlines.length != 10) return reset(null);\n    hlines.forEach((hl) => {\n      vlines.forEach((vl) => {\n          const intersection: Point = vl.intersects(hl);\n          if(intersection){\n            intersection.x = intersection.x + xMod * 1.6;\n            intersection.y = intersection.y + yMod * 2;\n            intersectionPoints.push(intersection);\n          }\n      });\n    });\n    console.log(intersectionPoints);\n    findSquares();\n    waitForSquares();\n  }\n\n  const findSquares = () => {\n    intersectionPoints.reverse().forEach(\n        (p, i) => {\n            if (i + 11 < intersectionPoints.length && (i - 9) % 10 != 0) {\n                const sq = new Square(i, ctx, canvas, p, intersectionPoints[i + 11]);\n                squares.push(sq);\n            }\n        });\n    squares.forEach((s, i) => {\n        setTimeout(function () {\n            s.getLetter();\n        }, i * 10);\n    });\n  }\n\n  const putImageData = (imageData: ImageData) => {\n    ctx.putImageData(imageData, 0, 0);\n  };\n\n  const threshold = () => {\n      const pixelData: ImageData = ctx.getImageData(0, 0, imageWidth, imageHeight);\n      points.forEach( (point: Point) => {\n        if(point.getColourMagnitued(pixelData.data) / 3 < globalThreshold) {\n          point.plot(pixelData.data, \"#000000\");\n        }else{\n          point.plot(pixelData.data, \"#FFFFFF\");\n        }\n      });\n      putImageData(pixelData);\n  }\n\n  const boxImage = () => {\n    const pixelData: ImageData = ctx.getImageData(0, 0, imageWidth, imageHeight);\n    points.forEach( (point: Point) => {\n      if(!(point.inBox(imageWidth, imageHeight, xMod, yMod))){\n        point.plot(pixelData.data, \"#000000\");\n      }\n    });\n    putImageData(pixelData);\n  }\n\n  const upContrast = (contrast: any) => {\n    const pixelData: ImageData = ctx.getImageData(0, 0, imageWidth, imageHeight);\n    contrast = (contrast/100) + 1;  //convert to decimal & shift range: [0..2]\n    var intercept = 128 * (1 - contrast);\n    for(var i=0;i<pixelData.data.length;i+=4){   //r,g,b,a\n      pixelData.data[i] = pixelData.data[i]*contrast + intercept;\n      pixelData.data[i+1] = pixelData.data[i+1]*contrast + intercept;\n      pixelData.data[i+2] = pixelData.data[i+2]*contrast + intercept;\n    }\n    putImageData(pixelData);\n  }\n\n  const squaresInitilized = () => {\n    return squares.filter(s => !s.intialised).length == 0;\n  }\n\nconst waitForSquares = function(){\n    console.log(`Waiting for sqaures to be done!`);\n    setTimeout(squaresInitilized() ? solveGame : waitForSquares, 1000);\n}\n\nconst solvecb = function(){\n    gameBoard.solve();\n    console.log(`HMMMMMM`);\n    setTimeout(gameBoard.solved() ? () => {solved()} : solvecb, 10);\n}\n\nconst solved = function(){\n    console.log('we did it')\n    gameBoard.cells.forEach((c: Square) => {\n        gameBoard.fillCell(c, c.number);\n    });\n}\n\nconst solveGame = function(){\n    gameBoard.populateBoard(squares)\n    solvecb();\n}\n\n  if(!threshholdDone){\n    setThreshholdDone(true);\n  }\n  return <> \n  {edges && <img onLoad={copyToCanvas} ref={imageRef} src={edges.toDataURL()} alt=\"Captured Image\" id=\"image\" hidden />}\n  {origin && <img ref={orgImageRef} src={origin} alt=\"Captured Image\" id=\"orgin\" hidden />}\n  </>;\n};\n\nexport default Decector;\n","import React, { useEffect, useRef, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Camera from './components/Camera/Camera';\nimport Decector from './components/Decector/Decector';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nfunction useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\nfunction App() {\n  const { height, width } = useWindowDimensions();\n  const imageWidth = width;\n  const imageHeight = height;\n\n  const [canvas, setCanvas] = useState<any>(null);\n\n  const cameraComponent = <Camera ctxReady={setCanvas} imageWidth={imageWidth} imageHeight={imageHeight}/>;\n  const detectorComponent = canvas ? <Decector canvas={canvas} imageWidth={canvas.scrollWidth} imageHeight={canvas.scrollHeight} reset={setCanvas}/> : '';\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n          {cameraComponent}\n          {canvas && detectorComponent}\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      </header>\n    </div>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"uiButton\":\"Camera_uiButton__1P_j6\",\"CameraWrapper\":\"Camera_CameraWrapper__24Xq_\",\"camera\":\"Camera_camera__31Kb3\",\"canvas\":\"Camera_canvas__1XXIi\"};","module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","module.exports = __webpack_public_path__ + \"static/media/camera.c4363820.svg\";","module.exports = __webpack_public_path__ + \"static/media/bin.3fd11e65.svg\";"],"sourceRoot":""}