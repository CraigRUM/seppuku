{"version":3,"sources":["components/Camera/Camera.tsx","model/Point.ts","model/CannyEdgeDetector.ts","model/HoughTransform.ts","model/Intersection.ts","model/Square.ts","model/GameBoard.ts","components/Decector/Decector.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/Camera/Camera.module.css","logo.svg","components/Camera/camera.svg","components/Camera/bin.svg"],"names":["Camera","_ref","ctxReady","width","height","videoConstraints","facingMode","_useState","useState","_useState2","Object","slicedToArray","imageSrc","setImageSrc","_useState3","_useState4","imageElement","setImageElement","_useState5","_useState6","imageRef","setImageRef","_useState7","_useState8","loadedImage","setLoadedImage","canvasRef","createRef","webcamRef","React","useRef","capture","useCallback","current","getScreenshot","webcam","react_default","a","createElement","react_webcam_default","ref","screenshotFormat","useEffect","onLoad","getImageHeight","onRefChange","src","alt","id","node","_ref2","img","target","getContext","drawImage","reset","callback","uiButton","className","styles","onClick","binIcon","cameraIcon","canvas","Fragment","CameraWrapper","Point","x","y","imageWidth","classCallCheck","this","rIndex","gIndex","bIndex","data","concat","hexVal","n","toString","hexString","_hexString$slice$matc","slice","match","map","s","Number","colour","arguments","length","undefined","rgb","rgbVal","console","log","defaultOptions","lowThreshold","highThreshold","gaussianBlur","Gx","Gy","convOptions","bitDepth","mode","HoughTransform","distance","minLength","maxTilt","_this","THICKNESS","HOZIZONTAL","VERTICAL","ctx","numAngleCells","rhoMax","accum","Array","drawingWidth","drawingHeight","cosTable","sinTable","findMaxInHough","lines","i","j","max","b","bestRho","push","x1","y1","x2","y2","newLines","filter","l","mainX","mainY","forEach","line","drawLine","_loop","pop","mainLineOrientation","checkOrientation","main","getMidPoint","secondary","getLineDistance","beginPath","strokeStyle","moveTo","lineTo","stroke","closePath","houghAcc","rho","thetaIndex","Math","sqrt","theta","PI","cos","sin","getDif","start","end","min","Intersection","Square","topLeft","bottomRight","intialised","numbers","provisonal","number","pos","sq","row","col","filteredPos","heightMod","percent","widthMod","listToFilter","inList","tryFilter","list","_this2","others","c","apply","toConsumableArray","includes","val","fillStyle","fill","draw","dataURL","_this3","isEmpty","blank","document","body","style","backgroundImage","Tesseract","recognize","progress","then","res","text","replace","substring","drawLetter","catch","offsetX","offsetY","buffer","b_ctx","toDataURL","font","fillText","r","g","imageData","getImageData","count","blackCount","GameBoard","cols","rows","squares","solvefailed","cells","colours","e","group","bSquare","populateCellData","floor","random","updatePossible","filterPossible","failed","cell","getNextBest","guessCell","fillCell","getRandomInt","options","refinedOptions","v","_ret","getPos","filterPos","setTimeout","clearBoard","getRow","getCol","getSquare","Decector","imageHeight","threshholdDone","setThreshholdDone","edges","setEdges","origin","setOrigin","points","setPoints","orgImageRef","intersectionPoints","gameBoard","boxSize","xMod","yMod","freshPoints","Image","load","grey","image","checkProcessable","channels","components","assign","brightness","maxValue","gfOptions","sigma","radius","gf","gaussianFilter","gradientX","convolution","gradientY","G","hypotenuse","constructor","nms","kind","finalImage","dir","round","atan2","getValueXY","setValueXY","currentNms","currentEdge","currentPixels","outer","k","newPixels","cannyEdgeDetector","copyToCanvas","boxImage","doHueTransform","houghTransform","pixelData","upContrast","threshold","point","inBox","getColourMagnitued","hlines","vlines","hl","vl","intersects","findSquares","waitForSquares","reverse","p","getLetter","putImageData","plot","contrast","intercept","solveGame","solved","populateBoard","solvecb","solve","hidden","getWindowDimensions","_window","window","innerWidth","innerHeight","App","_useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","setCanvas","cameraComponent","components_Camera_Camera","detectorComponent","components_Decector_Decector","logo","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b320d40a.chunk.js","sourcesContent":["import React, { createRef, FC, useCallback, useEffect, useState } from 'react';\nimport styles from './Camera.module.css';\nimport Webcam from \"react-webcam\";\nimport cameraIcon from'./camera.svg';\nimport binIcon from'./bin.svg';\n\ninterface CameraProps {ctxReady: Function, width: number, height: number}\n\nconst Camera: FC<CameraProps> = ({ctxReady, width, height}) => {\n  const videoConstraints = {\n    width: width,\n    height: height,\n    facingMode: \"environment\"\n  };\n\n  // States\n  const [imageSrc, setImageSrc] = useState<any>('');\n  const [imageElement, setImageElement] = useState<any>('');\n  const [imageRef, setImageRef] = useState<any>('');\n  const [loadedImage, setLoadedImage] = useState<any>('');\n  const canvasRef = createRef() as any;\n\n  // Web Cam setup\n  const webcamRef = React.useRef(null) as any;\n  const capture = useCallback(() => {\n    if(webcamRef.current){setImageSrc(webcamRef.current.getScreenshot()); }\n    },[webcamRef]\n  );\n  const webcam = <Webcam ref={webcamRef} screenshotFormat=\"image/jpeg\" videoConstraints={videoConstraints}/>;\n\n  useEffect(() => {\n    setImageElement(<img onLoad={getImageHeight} ref={onRefChange} src={imageSrc} alt=\"Captured Image\" id=\"image\" />);\n  }, [imageSrc]);\n\n  const onRefChange = useCallback(node => {\n    setImageRef(node);\n  }, [imageElement]);\n\n  const getImageHeight = function({target: img} :any){\n    setLoadedImage(img);\n  }\n\n  useEffect(() => {\n    if(canvasRef.current){\n      const ctx = canvasRef.current.getContext('2d');\n      ctx.drawImage(imageRef, 0, 0);\n      setImageElement('');\n      ctxReady(canvasRef.current);\n    }\n  }, [loadedImage]);\n\n  const reset = useCallback((callback) => {\n    setImageSrc(null);\n    setLoadedImage(null);\n    setImageElement('');\n    ctxReady(null);\n  },[]);\n\n  const uiButton = imageSrc ? \n    <button className={styles.uiButton} onClick={reset}><img src={binIcon} alt=\"reset\" /></button> : \n    <button className={styles.uiButton} onClick={capture}><img src={cameraIcon} alt=\"take a picture\" /></button>;\n\n  const canvas = <canvas ref={canvasRef} height={height} width={width}/>;\n  \n  return <>\n    <div className={styles.CameraWrapper}>\n      {imageSrc && imageElement}\n      {loadedImage && canvas}\n      {!imageSrc && webcam}\n    </div>\n    {uiButton}\n  </>;\n};\n\nexport default Camera;","class Point {\r\n    x : number;\r\n    y : number;\r\n\r\n    rIndex : number;\r\n    gIndex : number;\r\n    bIndex : number;\r\n\r\n    constructor(x:number, y:number, imageWidth:number) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.rIndex = (x + y * imageWidth) * 4;\r\n        this.gIndex = this.rIndex + 1;\r\n        this.bIndex = this.gIndex + 1;\r\n    }\r\n\r\n    getColourAsHex(data: Uint8ClampedArray){\r\n        return `#${this.hexVal(data[this.rIndex])}${this.hexVal(data[this.gIndex])}${this.hexVal(data[this.bIndex])}`;\r\n    }\r\n\r\n    getColourMagnitued(data: Uint8ClampedArray){\r\n        return data[this.rIndex]+data[this.gIndex]+data[this.bIndex];\r\n    }\r\n\r\n    hexVal(n: number){\r\n        return n.toString(16);\r\n    }\r\n\r\n    rgbVal(hexString: string){\r\n        return hexString.slice(1).match(/.{1,2}/g)?.map(s => Number(`0x${s}`));\r\n    }\r\n\r\n    plot(data: Uint8ClampedArray, colour: string = \"#4be11e\"){\r\n        const rgb = this.rgbVal(colour);\r\n        if (rgb) {\r\n            data[this.rIndex] = rgb[0];\r\n            data[this.gIndex] = rgb[1];\r\n            data[this.bIndex] = rgb[2];\r\n        }else{\r\n            console.log(`bad colour`);\r\n        }\r\n    }\r\n}\r\nexport default Point;","const defaultOptions = {\r\n    lowThreshold: 10,\r\n    highThreshold: 30,\r\n    gaussianBlur: 1.1\r\n};\r\n\r\nconst Gx = [\r\n    [-1, 0, +1],\r\n    [-2, 0, +2],\r\n    [-1, 0, +1]\r\n];\r\n\r\nconst Gy = [\r\n    [-1, -2, -1],\r\n    [0, 0, 0],\r\n    [+1, +2, +1]\r\n];\r\n\r\nconst convOptions = {\r\n    bitDepth: 32,\r\n    mode: 'periodic'\r\n};\r\n\r\nexport default function cannyEdgeDetector(image: any, options?: any) {\r\n    image.checkProcessable('Canny edge detector', {\r\n        bitDepth: 8,\r\n        channels: 1,\r\n        components: 1\r\n    });\r\n\r\n    options = Object.assign({}, defaultOptions, options);\r\n\r\n    const width = image.width;\r\n    const height = image.height;\r\n    const brightness = image.maxValue;\r\n\r\n    const gfOptions = {\r\n        sigma: options.gaussianBlur,\r\n        radius: 3\r\n    };\r\n\r\n    const gf = image.gaussianFilter(gfOptions);\r\n\r\n    const gradientX = gf.convolution(Gy, convOptions);\r\n    const gradientY = gf.convolution(Gx, convOptions);\r\n\r\n    const G = gradientY.hypotenuse(gradientX);\r\n\r\n    const Image = image.constructor;\r\n\r\n    const nms = new Image(width, height, {\r\n        kind: 'GREY',\r\n        bitDepth: 32\r\n    });\r\n\r\n    const edges = new Image(width, height, {\r\n        kind: 'GREY',\r\n        bitDepth: 32\r\n    });\r\n\r\n    const finalImage = new Image(width, height, {\r\n        kind: 'GREY'\r\n    });\r\n\r\n    // Non-Maximum supression\r\n    for (var i = 1; i < width - 1; i++) {\r\n        for (var j = 1; j < height - 1; j++) {\r\n\r\n            var dir = (Math.round(Math.atan2(gradientY.getValueXY(i, j, 0), gradientX.getValueXY(i, j, 0)) * (5.0 / Math.PI)) + 5) % 5;\r\n\r\n            if (\r\n                !((dir === 0 && (G.getValueXY(i, j, 0) <= G.getValueXY(i, j - 1, 0) || G.getValueXY(i, j, 0) <= G.getValueXY(i, j + 1, 0)))\r\n                    || (dir === 1 && (G.getValueXY(i, j, 0) <= G.getValueXY(i - 1, j + 1, 0) || G.getValueXY(i, j, 0) <= G.getValueXY(i + 1, j - 1, 0)))\r\n                    || (dir === 2 && (G.getValueXY(i, j, 0) <= G.getValueXY(i - 1, j, 0) || G.getValueXY(i, j, 0) <= G.getValueXY(i + 1, j, 0)))\r\n                    || (dir === 3 && (G.getValueXY(i, j, 0) <= G.getValueXY(i - 1, j - 1, 0) || G.getValueXY(i, j, 0) <= G.getValueXY(i + 1, j + 1, 0))))\r\n            ) {\r\n                nms.setValueXY(i, j, 0, G.getValueXY(i, j, 0));\r\n            }\r\n        }\r\n    }\r\n\r\n    for (i = 0; i < width * height; ++i) {\r\n        var currentNms = nms.data[i];\r\n        var currentEdge = 0;\r\n        if (currentNms > options.highThreshold) {\r\n            currentEdge++;\r\n            finalImage.data[i] = brightness;\r\n        }\r\n        if (currentNms > options.lowThreshold) {\r\n            currentEdge++;\r\n        }\r\n\r\n        edges.data[i] = currentEdge;\r\n    }\r\n\r\n    // Hysteresis: first pass\r\n    var currentPixels = [];\r\n    for (i = 1; i < width - 1; ++i) {\r\n        for (j = 1; j < height - 1; ++j) {\r\n            if (edges.getValueXY(i, j, 0) !== 1) {\r\n                continue;\r\n            }\r\n\r\n            outer: for (var k = i - 1; k < i + 2; ++k) {\r\n                for (var l = j - 1; l < j + 2; ++l) {\r\n                    if (edges.getValueXY(k, l, 0) === 2) {\r\n                        currentPixels.push([i, j]);\r\n                        finalImage.setValueXY(i, j, 0, brightness);\r\n                        break outer;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Hysteresis: second pass\r\n    while (currentPixels.length > 0) {\r\n        var newPixels = [];\r\n        for (i = 0; i < currentPixels.length; ++i) {\r\n            for (j = -1; j < 2; ++j) {\r\n                for (k = -1; k < 2; ++k) {\r\n                    if (j === 0 && k === 0) {\r\n                        continue;\r\n                    }\r\n                    var row: any = currentPixels[i][0] + j;\r\n                    var col: any = currentPixels[i][1] + k;\r\n                    if (edges.getValueXY(row, col, 0) === 1 && finalImage.getValueXY(row, col, 0) === 0) {\r\n                        newPixels.push([row, col]);\r\n                        finalImage.setValueXY(row, col, 0, brightness);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        currentPixels = newPixels;\r\n    }\r\n\r\n    return finalImage;\r\n}","import Line from \"./Line\";\r\n\r\n//HSctx.fillStyle = 'rgba(0,0,0,.01)';\r\nclass HoughTransform{\r\n    THICKNESS = 2;\r\n    HOZIZONTAL = \"h\";\r\n    VERTICAL = \"v\";\r\n    ctx: any;\r\n    numAngleCells = 360;\r\n    rhoMax: number;\r\n    accum = new Array(this.numAngleCells);\r\n    drawingWidth: number;\r\n    drawingHeight: number;\r\n    cosTable = new Array(this.numAngleCells);\r\n    sinTable = new Array(this.numAngleCells);\r\n    minLength: number;\r\n    distance: number;\r\n    maxTilt: number;\r\n\r\n    constructor(canvas: HTMLCanvasElement, distance: number, minLength: number, maxTilt: number){\r\n        this.maxTilt = maxTilt;\r\n        this.minLength = minLength;\r\n        this.distance = distance;\r\n        this.drawingWidth = canvas.width;\r\n        this.drawingHeight = canvas.height;\r\n        this.rhoMax = Math.sqrt(this.drawingWidth * this.drawingWidth + this.drawingHeight * this.drawingHeight);\r\n        this.ctx = canvas.getContext('2d');\r\n        for (var theta = 0, thetaIndex = 0; thetaIndex < this.numAngleCells; theta += Math.PI / this.numAngleCells, thetaIndex++) {\r\n            this.cosTable[thetaIndex] = Math.cos(theta);\r\n            this.sinTable[thetaIndex] = Math.sin(theta);\r\n        }\r\n    }\r\n\r\n    findMaxInHough = () => {\r\n        let lines = [] as Array<Line>;\r\n        for (var i=0;i<360;i++) {\r\n            for (var j=0;j<this.accum[i].length;j++) {\r\n                if (this.accum[i][j]>max) {}\r\n                    var max = this.accum[i][j];\r\n                    if (max>this.minLength) {\r\n                        var a=this.cosTable[i];\r\n                        var b=this.sinTable[i];\r\n                        var bestRho = j;\r\n                        bestRho<<=1; // accumulator is bitshifted\r\n                        bestRho-=this.rhoMax; /// accumulator has rhoMax added\r\n                        lines.push({   \r\n                            x1: a*bestRho+1000*(-b),\r\n                            y1: (b*bestRho+1000*(a)),\r\n                            x2: a*bestRho-1000*(-b),\r\n                            y2: (b*bestRho-1000*(a))   \r\n                        } as Line);\r\n                    }\r\n            }\r\n        }\r\n        const newLines = [] as Array<Line>;\r\n        lines = lines.filter(l => {\r\n            const mainX = (l.x1 - l.x2) < -this.maxTilt || (l.x2 - l.x1) < -this.maxTilt;\r\n            const mainY = (l.y1 - l.y2) < -this.maxTilt || (l.y2 - l.y1) < -this.maxTilt;\r\n            return !(mainX && mainY)\r\n        });\r\n        lines.forEach((line: Line, i: number) => {\r\n            this.drawLine(line, `rgba(0,${(255 / lines.length) * (lines.length - i)},${(255 / lines.length) * i},1)`);\r\n        });\r\n        while(lines.length > 0){\r\n            const line: Line = lines.pop() as Line;\r\n            newLines.push(line);\r\n            lines = lines.filter(l => {\r\n                const mainLineOrientation = this.checkOrientation(line)\r\n                const secondaryLineOrientation = this.checkOrientation(l);\r\n                if(mainLineOrientation != secondaryLineOrientation) return true;\r\n\r\n                const main = mainLineOrientation == this.VERTICAL ? \r\n                    this.getMidPoint(line.x1, line.x2):\r\n                    this.getMidPoint(line.y1,  line.y2);\r\n                const secondary = mainLineOrientation == this.VERTICAL ? \r\n                    this.getMidPoint(l.x1, l.x2):\r\n                    this.getMidPoint(l.y1,  l.y2);\r\n                return !this.getLineDistance(main, secondary);\r\n            });\r\n        }\r\n        console.log(newLines);\r\n        newLines.forEach((line: Line) => {\r\n            this.drawLine(line, `rgba(${(255 / lines.length) * (i)},0,${(255 / lines.length) * (lines.length - i)},1)`);\r\n            this.drawLine(line, 'rgba(255,0,0,1)');\r\n        });\r\n        return newLines;\r\n    }\r\n\r\n    checkOrientation(line: Line){\r\n        return this.getDif(line.x1, line.x2) > this.getDif(line.y1, line.y2) ? this.HOZIZONTAL : this.VERTICAL;\r\n    }\r\n\r\n    getDif(start: number, end: number){\r\n        const max = start > end ? start : end;\r\n        const min = start > end ? end : start;\r\n        return (max - min);\r\n    }\r\n\r\n    getMidPoint(start: number, end: number){\r\n        const max = start > end ? start : end;\r\n        const min = start > end ? end : start;\r\n        return min + ((max - min) / 2);\r\n    }\r\n\r\n    getLineDistance(start: number, end: number){\r\n        const max = start > end ? start : end;\r\n        const min = start > end ? end : start;\r\n        return (min + this.distance) > max;\r\n    }\r\n\r\n    drawLine = (line: Line, colour: string) => {\r\n        console.log(line);\r\n        // now to backproject into drawing space\r\n        //console.log(bestTheta,bestRho);\r\n        //console.log(x1,y1,x2,y2);\r\n        this.ctx.beginPath();\r\n        this.ctx.strokeStyle=colour;\r\n        this.ctx.moveTo(line.x1+this.drawingWidth/2,line.y1+this.drawingHeight/2);\r\n        this.ctx.lineTo(line.x2+this.drawingWidth/2,line.y2+this.drawingHeight/2);\r\n        this.ctx.stroke();\r\n        this.ctx.strokeStyle='rgba(0,0,0,1)';\r\n        this.ctx.closePath();\r\n    }\r\n\r\n    houghAcc = (x: number, y: number) => {\r\n        console.log(\"running\");\r\n        var rho;\r\n        var thetaIndex = 0;\r\n        x -= this.drawingWidth / 2;\r\n        y -= this.drawingHeight / 2;\r\n        for (; thetaIndex < this.numAngleCells; thetaIndex++) {\r\n            rho = this.rhoMax + x * this.cosTable[thetaIndex] + y * this.sinTable[thetaIndex];\r\n            rho >>= 1;\r\n            if (this.accum[thetaIndex] == undefined) this.accum[thetaIndex] = [];\r\n            if (this.accum[thetaIndex][rho] == undefined) {\r\n                this.accum[thetaIndex][rho] = 1;\r\n            } else {\r\n                this.accum[thetaIndex][rho]++;\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default HoughTransform;","class Intersection{\r\n    x: number;\r\n    y: number;\r\n\r\n    constructor(x: number, y: number){\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\r\nexport default Intersection;","import Intersection from \"./Intersection\";\r\nimport {Tesseract} from \"tesseract.ts\";\r\n\r\nclass Square{\r\n\r\n    id: any; \r\n    ctx: any; \r\n    canvas: any; \r\n    topLeft: any; \r\n    bottomRight: any;\r\n    intialised: any;\r\n    width: any;\r\n    height: any;\r\n    numbers: any;\r\n    provisonal: boolean;\r\n    number: string = '';\r\n    pos: any;\r\n    sq: any;\r\n    row: any;\r\n    col: any;\r\n    filteredPos: any;\r\n\r\n    constructor(id :any, ctx:any, canvas:any, topLeft:any, bottomRight:any){\r\n        this.id = id;\r\n        this.ctx = ctx\r\n        this.topLeft = new Intersection(topLeft.x, topLeft.y);\r\n        this.bottomRight = new Intersection(bottomRight.x, bottomRight.y);\r\n        this.canvas = canvas;\r\n        this.intialised = false;\r\n        this.width = this.bottomRight.x - this.topLeft.x;\r\n        this.height = this.bottomRight.y - this.topLeft.y;\r\n        this.numbers = ['1','2','3','4','5','6','7','8','9'];\r\n\r\n        const heightMod = this.percent(this.height, 15);\r\n        const widthMod = this.percent(this.width, 15);\r\n        this.bottomRight.y = this.bottomRight.y - heightMod;\r\n        this.bottomRight.x = this.bottomRight.x - widthMod;\r\n        this.topLeft.y = this.topLeft.y + heightMod;\r\n        this.topLeft.x = this.topLeft.x + widthMod;\r\n        this.width = this.bottomRight.x - this.topLeft.x;\r\n        this.height = this.bottomRight.y - this.topLeft.y;\r\n        this.provisonal = false;\r\n    }\r\n\r\n    getPos(){\r\n        const listToFilter = this.pos && this.pos.length > 0 ? this.pos : this.numbers;\r\n        this.pos = listToFilter.filter( (n: any) => !(this.inList(this.row, n) || this.inList(this.col, n) || this.inList(this.sq, n)));\r\n    }\r\n\r\n    filterPos(){\r\n        this.tryFilter(this.sq);\r\n        this.tryFilter(this.row);\r\n        this.tryFilter(this.col);\r\n    }\r\n\r\n    tryFilter(list:any){\r\n        const others:any = [];\r\n        this.row.filter((c:Square) => !c.number && c.id != this.id).forEach((c:Square) => others.push(...c.pos));\r\n        this.col.filter((c:Square) => !c.number && c.id != this.id).forEach((c:Square) => others.push(...c.pos));\r\n        list.filter((c:Square) => !c.number && c.id != this.id).forEach((c:Square) => others.push(...c.pos));\r\n        this.filteredPos = this.pos.filter((n:any) => !others.includes(n));\r\n        if(this.filteredPos.length > 0 && this.filteredPos.length < this.pos.length){\r\n            this.pos = this.filteredPos;\r\n        }\r\n    }\r\n\r\n    inList(list:any, number:string){\r\n        return list.filter((c:Square) => c.number === number).length != 0\r\n    }\r\n\r\n    percent(val: any, percent: any){\r\n        return (val / 100) * percent;\r\n    }\r\n\r\n    draw(colour='yellow'){\r\n        this.ctx.fillStyle = colour;\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(this.topLeft.x, this.topLeft.y);\r\n        this.ctx.lineTo(this.bottomRight.x, this.topLeft.y);\r\n        this.ctx.lineTo(this.bottomRight.x, this.bottomRight.y);\r\n        this.ctx.lineTo(this.topLeft.x, this.bottomRight.y);\r\n        this.ctx.lineTo(this.topLeft.x, this.topLeft.y);\r\n        this.ctx.closePath();\r\n        this.ctx.fill();\r\n    }\r\n\r\n    blank(){\r\n        this.draw('white');\r\n        this.number = '';\r\n        this.pos = [];\r\n        this.intialised = true;\r\n        this.provisonal = true;\r\n    }\r\n\r\n    callback(dataURL: string) {\r\n        if(this.isEmpty()){\r\n            this.blank();\r\n            return;\r\n        }\r\n        document.body.style.backgroundImage = 'url(' + dataURL + ')';\r\n        Tesseract.recognize(\r\n            dataURL,'eng'\r\n        ).progress(console.log).then((res: any) => {\r\n            console.log(res.text);\r\n            const number = res.text ? res.text.replace(/[^0-9]/g,\"\").substring(0, 1) : \"\";\r\n            if(number){\r\n                //this.draw('orange');\r\n                this.number = number;\r\n                this.drawLetter();\r\n                this.intialised = true;\r\n                this.provisonal = false;\r\n                console.log(`The number you are looking at is a ${res.text} in square ${this.toString()}`);\r\n            }else{\r\n                console.log(`Nothing found in square ${this.toString()}`);\r\n                this.blank();\r\n            }\r\n        }).catch(() => {\r\n            this.callback(dataURL)\r\n        })\r\n    }\r\n\r\n    getLetter() {\r\n        // create an in-memory canvas\r\n        const offsetX = this.topLeft.x\r\n        const offsetY = this.topLeft.y\r\n        const width = this.bottomRight.x - this.topLeft.x\r\n        const height = this.bottomRight.y - this.topLeft.y\r\n        var buffer = document.createElement('canvas') as HTMLCanvasElement;\r\n        var b_ctx = buffer.getContext('2d');\r\n        // set its width/height to the required ones\r\n        buffer.width = width;\r\n        buffer.height = height;\r\n        // draw the main canvas on our buffer one\r\n        // drawImage(source, source_X, source_Y, source_Width, source_Height, \r\n        //  dest_X, dest_Y, dest_Width, dest_Height)\r\n        if(b_ctx){\r\n            b_ctx.drawImage(this.canvas, offsetX, offsetY, width, height,\r\n                0, 0, buffer.width, buffer.height);\r\n        }\r\n        // now call the callback with the dataURL of our buffer canvas\r\n        this.callback(buffer.toDataURL());\r\n    }\r\n\r\n    drawLetter() {\r\n        this.ctx.fillStyle = \"black\";\r\n        this.ctx.font = '25px Courier New';\r\n        this.ctx.fillText(this.number, this.topLeft.x, this.bottomRight.y);\r\n    }\r\n\r\n    toString(){\r\n        return `|${this.number}|`\r\n    }\r\n\r\n    isEmpty(){\r\n        const imageData = this.ctx.getImageData(this.topLeft.x, this.topLeft.y, this.width, this.height); //take away the .data\r\n\r\n        var r, g, b;\r\n        var count = 0;\r\n        var blackCount = 0; \r\n        for(var i = 0; i+3 < imageData.data.length; i+=4) {\r\n            r = imageData.data[i];\r\n            g = imageData.data[i+1];\r\n            b = imageData.data[i+2];\r\n\r\n            if(r + b + g < 255) { // if pixel is not black, and not transparent          \r\n                blackCount++;\r\n            }\r\n            count++;\r\n        }\r\n        const percent = (blackCount / (count / 100));\r\n        return !(percent > 15);\r\n    }\r\n}\r\nexport default Square;","import Square from \"./Square\";\r\n\r\nclass GameBoard {\r\n    cols :any;\r\n    rows :any;\r\n    squares :any;\r\n    solvefailed :boolean;\r\n    cells: any;\r\n    colours: string[] = [\"teal\", \"cyan\", \"pink\", \"magenta\", \"lightgrey\", \"yellow\", \"red\", \"lime\", \"orange\"];\r\n    constructor() {\r\n        this.cols = [[], [], [], [], [], [], [], [], []];\r\n        this.rows = [];\r\n        this.squares = [];\r\n        this.solvefailed = false;\r\n    }\r\n\r\n    populateBoard(cells: any) {\r\n        this.cells = cells;\r\n        for (var i = 0; i < 9; i++) {\r\n            const start = i * 9;\r\n            const end = start + 9;\r\n            this.rows.push(this.cells.slice(start, end));\r\n        }\r\n\r\n        this.rows.forEach((c:any, i:number) => {\r\n            c.forEach((e:any, j:number) => {\r\n                this.cols[j][i] = this.rows[i][j];\r\n            });\r\n        });\r\n\r\n        for (var i = 0; i < 3; i++) {\r\n            const group = this.rows.slice(i * 3, (i * 3) + 3);\r\n            for (var j = 0; j < 3; j++) {\r\n                const start = j * 3;\r\n                const end = start + 3;\r\n                const bSquare = [];\r\n                bSquare.push(...group[0].slice(start, end));\r\n                bSquare.push(...group[1].slice(start, end));\r\n                bSquare.push(...group[2].slice(start, end));\r\n                this.squares.push(bSquare);\r\n            }\r\n        }\r\n\r\n        this.cells.forEach((c: any) => this.populateCellData(c));\r\n        console.log(this.cols);\r\n        console.log(this.rows);\r\n        console.log(this.squares);\r\n    }\r\n\r\n    getRandomInt(max: number) {\r\n        return Math.floor(Math.random() * max);\r\n    }\r\n\r\n    solve(){\r\n        this.updatePossible();\r\n        this.filterPossible();\r\n        const options = this.cells.filter((c: Square) => !c.number);\r\n        if(options.filter((c: Square) => c.pos.length == 0).length > 0){\r\n            this.failed();\r\n            return;\r\n        }\r\n        const cell = this.getNextBest();\r\n        this.guessCell(cell);\r\n    }\r\n\r\n    guessCell(cell: Square){\r\n        if(cell && cell.pos && cell.pos.length){\r\n            this.fillCell(cell, cell.pos[this.getRandomInt(cell.pos.length)]);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getNextBest(){\r\n        const options = this.cells.filter((c: Square) => !c.number);\r\n        for(let i = 1; i <= 8; i++){\r\n            const refinedOptions = options.filter((c: Square) => c.pos.length == i);\r\n            if(refinedOptions.length){\r\n                return refinedOptions[this.getRandomInt(refinedOptions.length)];\r\n            }\r\n        }\r\n    }\r\n\r\n    updatePossible(){\r\n        this.cells.filter((c: Square) => !c.number).forEach( (cell: Square) => {\r\n            cell.getPos();\r\n        });\r\n    }\r\n\r\n    filterPossible(){\r\n        this.cells.filter((c: Square) => !c.number).forEach( (cell: Square) => {\r\n            cell.filterPos();\r\n        });\r\n    }\r\n\r\n    fillCell(cell: Square, number: string){\r\n        cell.number = number;\r\n        cell.draw(this.colours[(+number)-1]);\r\n        cell.drawLetter();\r\n        this.solvefailed = false;\r\n    }\r\n\r\n    failed(){\r\n        this.cells.filter((c: Square) => c.provisonal).forEach((c: Square) => c.draw('pink'));\r\n        setTimeout(() => {this.clearBoard()}, 250);\r\n    }\r\n\r\n    clearBoard(){\r\n        this.cells.filter((c: Square) => c.provisonal).forEach((c: Square) => c.blank());\r\n    }\r\n\r\n    solved(){\r\n        return this.cells.filter((c: Square) => !c.number).length === 0\r\n    }\r\n\r\n    populateCellData(cell: Square){\r\n        cell.row = this.getRow(cell);\r\n        cell.col = this.getCol(cell);\r\n        cell.sq = this.getSquare(cell);\r\n    }\r\n\r\n    getRow(cell: Square){\r\n        return this.rows.filter((i:any) => i.filter((c: Square) => c.id === cell.id).length == 1)[0];\r\n    }\r\n\r\n    getCol(cell: Square){\r\n        return this.cols.filter((i:any) => i.filter((c: Square) => c.id === cell.id).length == 1)[0];\r\n    }\r\n\r\n    getSquare(cell: Square){\r\n        return this.squares.filter((i:any) => i.filter((c: Square) => c.id === cell.id).length == 1)[0];\r\n    }\r\n}\r\nexport default GameBoard;","import React, { createRef, FC, useEffect, useState } from 'react';\nimport styles from './Decector.module.css';\nimport Point from '../../model/Point';\nimport cannyEdgeDetector from '../../model/CannyEdgeDetector';\nimport HoughTransform from '../../model/HoughTransform';\nimport Image from 'image-js';\nimport Intersection from '../../model/Intersection';\nimport Square from '../../model/Square';\nimport GameBoard from '../../model/GameBoard';\n\ninterface DecectorProps {\n  canvas: any,\n  imageWidth: number,\n  imageHeight: number,\n  reset: Function\n}\n\nconst Decector: FC<DecectorProps> = ({canvas, imageWidth, imageHeight, reset}) => {\n  const ctx = canvas.getContext('2d');\n  const [threshholdDone, setThreshholdDone] = useState<any>(false);\n  const [edges, setEdges] = useState<any>(null);\n  const [origin, setOrigin] = useState<any>(null);\n  const [points, setPoints] = useState<any>(null);\n\n  const maxGap = 20;\n  const lineThreshold = 20;\n  const globalThreshold = 100;\n  const xColour = \"red\";\n  const yColour = \"green\";\n  const imageRef = createRef() as any;\n  const orgImageRef = createRef() as any;\n  const intersectionPoints: Intersection[] = [];\n  const squares: Square[] = [];\n  const gameBoard = new GameBoard();\n  const boxSize = imageHeight * 0.5;\n  const xMod = (imageWidth - boxSize) / 2;\n  const yMod = (imageHeight - boxSize) / 2;\n\n  const minLineLength = 120;\n\n  useEffect(() => {\n    setTimeout(()=>{\n      if(!points){\n        const freshPoints = new Array<Point>();\n        for (let y = 0; y < imageHeight; y++) {\n          for (let x = 0; x < imageWidth; x++) {\n            freshPoints.push(new Point(x, y, imageWidth));\n          }\n        }\n        setPoints(freshPoints);\n      }\n    }, 1);\n  }, [threshholdDone]);\n\n  useEffect(() => {\n    setTimeout(()=>{\n      //threshold();\n      Image.load(canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\")).then((img: Image) => {\n        setOrigin(img.toDataURL());\n        const grey = img.grey();\n        setEdges(cannyEdgeDetector(grey));\n      });\n      // getYLines(pixelData);\n      //getXLines();\n    }, 1);\n  }, [points]);\n  \n  const makeImage = () => {\n    const img = <img onLoad={copyToCanvas} ref={imageRef} src={edges.toDataURL()} alt=\"Captured Image\" id=\"image\" />;\n    return ;\n  }\n\n  const copyToCanvas = () =>{\n    ctx.drawImage(imageRef.current, 0, 0);\n    boxImage();\n    setTimeout(() =>{\n      doHueTransform();\n    }, 2000);\n  }\n\n  const doHueTransform = () => {\n    const maxTilt = (boxSize*0.05);\n    const houghTransform = new HoughTransform(canvas, (boxSize*0.08), (boxSize*0.5), maxTilt);\n    const pixelData:ImageData = ctx.getImageData(0, 0, imageWidth, imageHeight);\n    ctx.drawImage(orgImageRef.current, 0, 0);\n    upContrast(95);\n    threshold();\n    points.forEach( (point: Point) => {\n      if(inBox(point) && point.getColourMagnitued(pixelData.data) > 10){\n        houghTransform.houghAcc(point.x,point.y);\n      }\n    });\n\n    const lines = houghTransform.findMaxInHough();\n    const hlines = lines.filter(l =>  l.y1 + maxTilt > l.y2 && l.y1 - maxTilt < l.y2);\n    const vlines = lines.filter(l =>  l.x1 + maxTilt > l.x2 && l.x1 - maxTilt < l.x2);\n    if(vlines.length != 10 || hlines.length != 10) return reset(null);\n    hlines.forEach((hl) => {\n      vlines.forEach((vl) => {\n          intersects(vl.x1 + (imageWidth / 2), hl.y1 + (imageHeight / 2));\n      });\n    });\n    console.log(intersectionPoints);\n    findSquares();\n    waitForSquares();\n  }\n\n  const findSquares = () => {\n    intersectionPoints.reverse().forEach(\n        (p, i) => {\n            if (i + 11 < intersectionPoints.length && (i - 9) % 10 != 0) {\n                const sq = new Square(i, ctx, canvas, p, intersectionPoints[i + 11]);\n                squares.push(sq);\n            }\n        });\n    squares.forEach((s, i) => {\n        setTimeout(function () {\n            s.getLetter();\n        }, i * 10);\n    });\n}\n\n  const intersects = (x:number, y:number) => {\n    intersectionPoints.push(new Intersection(x, y));\n  }\n\n  const putImageData = (imageData: ImageData) => {\n    ctx.putImageData(imageData, 0, 0);\n  };\n\n  const threshold = () => {\n      const pixelData: ImageData = ctx.getImageData(0, 0, imageWidth, imageHeight);\n      points.forEach( (point: Point) => {\n        if(point.getColourMagnitued(pixelData.data) / 3 < globalThreshold) {\n          point.plot(pixelData.data, \"#000000\");\n        }else{\n          point.plot(pixelData.data, \"#FFFFFF\");\n        }\n      });\n      putImageData(pixelData);\n  }\n\n  const boxImage = () => {\n    const pixelData: ImageData = ctx.getImageData(0, 0, imageWidth, imageHeight);\n    points.forEach( (point: Point) => {\n      if(!(inBox(point))){\n        point.plot(pixelData.data, \"#000000\");\n      }\n    });\n    putImageData(pixelData);\n  }\n\n  const inBox = (point: Point) => {\n    return point.x > xMod && point.x < (imageWidth - xMod) && point.y > yMod && point.y < (imageHeight - yMod);\n  }\n\n  const upContrast = (contrast: any) => {\n    const pixelData: ImageData = ctx.getImageData(0, 0, imageWidth, imageHeight);\n    contrast = (contrast/100) + 1;  //convert to decimal & shift range: [0..2]\n    var intercept = 128 * (1 - contrast);\n    for(var i=0;i<pixelData.data.length;i+=4){   //r,g,b,a\n      pixelData.data[i] = pixelData.data[i]*contrast + intercept;\n      pixelData.data[i+1] = pixelData.data[i+1]*contrast + intercept;\n      pixelData.data[i+2] = pixelData.data[i+2]*contrast + intercept;\n    }\n    putImageData(pixelData);\n  }\n\n  const squaresInitilized = () => {\n    return squares.filter(s => !s.intialised).length == 0;\n  }\n\nconst waitForSquares = function(){\n    console.log(`Waiting for sqaures to be done!`);\n    setTimeout(squaresInitilized() ? solveGame : waitForSquares, 1000);\n}\n\nconst solvecb = function(){\n    gameBoard.solve();\n    console.log(`HMMMMMM`);\n    setTimeout(gameBoard.solved() ? () => {solved()} : solvecb, 10);\n}\n\nconst solved = function(){\n    console.log('we did it')\n    gameBoard.cells.forEach((c: Square) => {\n        gameBoard.fillCell(c, c.number);\n    });\n}\n\nconst solveGame = function(){\n    gameBoard.populateBoard(squares)\n    solvecb();\n}\n\n  if(!threshholdDone){\n    setThreshholdDone(true);\n  }\n  return <> \n  {edges && <img onLoad={copyToCanvas} ref={imageRef} src={edges.toDataURL()} alt=\"Captured Image\" id=\"image\" hidden />}\n  {origin && <img ref={orgImageRef} src={origin} alt=\"Captured Image\" id=\"orgin\" hidden />}\n  </>;\n};\n\nexport default Decector;\n","import React, { useEffect, useRef, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Camera from './components/Camera/Camera';\nimport Decector from './components/Decector/Decector';\nimport cameraIcon from'./camera.svg';\nimport binIcon from'./bin.svg';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nfunction useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\nfunction App() {\n\n  const { height, width } = useWindowDimensions();\n  const imageWidth = width > height ? width * 0.4 : ((height * 0.4) / 4) * 3;\n  const imageHeight = width > height ? ((width * 0.4) / 4) * 3 : height * 0.4;\n\n\n  const [canvas, setCanvas] = useState<any>(null);\n  const cameraRef = React.createRef() as any;\n  const cameraComponent = <Camera ctxReady={setCanvas} width={imageWidth} height={imageHeight}></Camera>;\n  const detectorComponent = <Decector canvas={canvas} imageWidth={imageWidth} imageHeight={imageHeight} reset={setCanvas}/>;\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n          {cameraComponent}\n          {canvas && detectorComponent}\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"uiButton\":\"Camera_uiButton__1P_j6\",\"CameraWrapper\":\"Camera_CameraWrapper__24Xq_\"};","module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","module.exports = __webpack_public_path__ + \"static/media/camera.c4363820.svg\";","module.exports = __webpack_public_path__ + \"static/media/bin.3fd11e65.svg\";"],"sourceRoot":""}